

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 16 15:44:09 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000ECE                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _problem
    40  000ECE  B2                 	db	low STR_1
    41  000ECF  06                 	db	high STR_1
    42                           
    43                           ;initializer for _startup
    44  000ED0  A6                 	db	low STR_2
    45  000ED1  06                 	db	high STR_2
    46                           
    47                           	psect	smallconst
    48  000600                     __psmallconst:
    49                           	opt stack 0
    50  000600  00                 	db	0
    51  000601                     _lcd_init:
    52                           	opt stack 0
    53  000601  33                 	db	51
    54  000602  32                 	db	50
    55  000603  2C                 	db	44
    56  000604  06                 	db	6
    57  000605  0C                 	db	12
    58  000606                     __end_of_lcd_init:
    59                           	opt stack 0
    60  000606                     _msg_ary:
    61                           	opt stack 0
    62  000606  41                 	db	65
    63  000607  20                 	db	32
    64  000608  56                 	db	86
    65  000609  61                 	db	97
    66  00060A  6C                 	db	108
    67  00060B  75                 	db	117
    68  00060C  65                 	db	101
    69  00060D  3E                 	db	62
    70  00060E  20                 	db	32
    71  00060F  00                 	db	0
    72  000610  00                 	db	0
    73  000611  00                 	db	0
    74  000612  00                 	db	0
    75  000613  00                 	db	0
    76  000614  00                 	db	0
    77  000615  00                 	db	0
    78  000616  42                 	db	66
    79  000617  20                 	db	32
    80  000618  56                 	db	86
    81  000619  61                 	db	97
    82  00061A  6C                 	db	108
    83  00061B  75                 	db	117
    84  00061C  65                 	db	101
    85  00061D  3E                 	db	62
    86  00061E  20                 	db	32
    87  00061F  00                 	db	0
    88  000620  00                 	db	0
    89  000621  00                 	db	0
    90  000622  00                 	db	0
    91  000623  00                 	db	0
    92  000624  00                 	db	0
    93  000625  00                 	db	0
    94  000626  41                 	db	65
    95  000627  20                 	db	32
    96  000628  56                 	db	86
    97  000629  61                 	db	97
    98  00062A  6C                 	db	108
    99  00062B  75                 	db	117
   100  00062C  65                 	db	101
   101  00062D  3E                 	db	62
   102  00062E  20                 	db	32
   103  00062F  00                 	db	0
   104  000630  00                 	db	0
   105  000631  00                 	db	0
   106  000632  00                 	db	0
   107  000633  00                 	db	0
   108  000634  00                 	db	0
   109  000635  00                 	db	0
   110  000636  4E                 	db	78
   111  000637  65                 	db	101
   112  000638  77                 	db	119
   113  000639  20                 	db	32
   114  00063A  41                 	db	65
   115  00063B  3F                 	db	63
   116  00063C  3E                 	db	62
   117  00063D  20                 	db	32
   118  00063E  00                 	db	0
   119  00063F  00                 	db	0
   120  000640  00                 	db	0
   121  000641  00                 	db	0
   122  000642  00                 	db	0
   123  000643  00                 	db	0
   124  000644  00                 	db	0
   125  000645  00                 	db	0
   126  000646  42                 	db	66
   127  000647  20                 	db	32
   128  000648  56                 	db	86
   129  000649  61                 	db	97
   130  00064A  6C                 	db	108
   131  00064B  75                 	db	117
   132  00064C  65                 	db	101
   133  00064D  3E                 	db	62
   134  00064E  20                 	db	32
   135  00064F  00                 	db	0
   136  000650  00                 	db	0
   137  000651  00                 	db	0
   138  000652  00                 	db	0
   139  000653  00                 	db	0
   140  000654  00                 	db	0
   141  000655  00                 	db	0
   142  000656  4E                 	db	78
   143  000657  65                 	db	101
   144  000658  77                 	db	119
   145  000659  20                 	db	32
   146  00065A  42                 	db	66
   147  00065B  3F                 	db	63
   148  00065C  3E                 	db	62
   149  00065D  20                 	db	32
   150  00065E  00                 	db	0
   151  00065F  00                 	db	0
   152  000660  00                 	db	0
   153  000661  00                 	db	0
   154  000662  00                 	db	0
   155  000663  00                 	db	0
   156  000664  00                 	db	0
   157  000665  00                 	db	0
   158  000666  43                 	db	67
   159  000667  20                 	db	32
   160  000668  56                 	db	86
   161  000669  61                 	db	97
   162  00066A  6C                 	db	108
   163  00066B  75                 	db	117
   164  00066C  65                 	db	101
   165  00066D  3E                 	db	62
   166  00066E  20                 	db	32
   167  00066F  00                 	db	0
   168  000670  00                 	db	0
   169  000671  00                 	db	0
   170  000672  00                 	db	0
   171  000673  00                 	db	0
   172  000674  00                 	db	0
   173  000675  00                 	db	0
   174  000676  4E                 	db	78
   175  000677  65                 	db	101
   176  000678  77                 	db	119
   177  000679  20                 	db	32
   178  00067A  43                 	db	67
   179  00067B  3F                 	db	63
   180  00067C  3E                 	db	62
   181  00067D  20                 	db	32
   182  00067E  00                 	db	0
   183  00067F  00                 	db	0
   184  000680  00                 	db	0
   185  000681  00                 	db	0
   186  000682  00                 	db	0
   187  000683  00                 	db	0
   188  000684  00                 	db	0
   189  000685  00                 	db	0
   190  000686  00                 	db	0
   191  000687  00                 	db	0
   192  000688  00                 	db	0
   193  000689  00                 	db	0
   194  00068A  00                 	db	0
   195  00068B  00                 	db	0
   196  00068C  00                 	db	0
   197  00068D  00                 	db	0
   198  00068E  00                 	db	0
   199  00068F  00                 	db	0
   200  000690  00                 	db	0
   201  000691  00                 	db	0
   202  000692  00                 	db	0
   203  000693  00                 	db	0
   204  000694  00                 	db	0
   205  000695  00                 	db	0
   206  000696  00                 	db	0
   207  000697  00                 	db	0
   208  000698  00                 	db	0
   209  000699  00                 	db	0
   210  00069A  00                 	db	0
   211  00069B  00                 	db	0
   212  00069C  00                 	db	0
   213  00069D  00                 	db	0
   214  00069E  00                 	db	0
   215  00069F  00                 	db	0
   216  0006A0  00                 	db	0
   217  0006A1  00                 	db	0
   218  0006A2  00                 	db	0
   219  0006A3  00                 	db	0
   220  0006A4  00                 	db	0
   221  0006A5  00                 	db	0
   222  0006A6                     __end_of_msg_ary:
   223                           	opt stack 0
   224  0000                     _ADCON1	set	4033
   225  0000                     _INTCONbits	set	4082
   226  0000                     _LATC	set	3979
   227  0000                     _LATDbits	set	3980
   228  0000                     _PORTB	set	3969
   229  0000                     _PORTCbits	set	3970
   230  0000                     _T0CON	set	4053
   231  0000                     _T0CONbits	set	4053
   232  0000                     _TMR0H	set	4055
   233  0000                     _TMR0L	set	4054
   234  0000                     _TRISB	set	3987
   235  0000                     _TRISC	set	3988
   236  0000                     _TRISD	set	3989
   237  0006A6                     STR_2:
   238  0006A6  52                 	db	82	;'R'
   239  0006A7  65                 	db	101	;'e'
   240  0006A8  61                 	db	97	;'a'
   241  0006A9  64                 	db	100	;'d'
   242  0006AA  79                 	db	121	;'y'
   243  0006AB  20                 	db	32
   244  0006AC  74                 	db	116	;'t'
   245  0006AD  6F                 	db	111	;'o'
   246  0006AE  20                 	db	32
   247  0006AF  67                 	db	103	;'g'
   248  0006B0  6F                 	db	111	;'o'
   249  0006B1  00                 	db	0
   250  0006B2                     STR_1:
   251  0006B2  50                 	db	80	;'P'
   252  0006B3  72                 	db	114	;'r'
   253  0006B4  6F                 	db	111	;'o'
   254  0006B5  62                 	db	98	;'b'
   255  0006B6  6C                 	db	108	;'l'
   256  0006B7  65                 	db	101	;'e'
   257  0006B8  6D                 	db	109	;'m'
   258  0006B9  00                 	db	0
   259                           
   260                           ; #config settings
   261  0006BA  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           	psect	cinit
   264  000D8E                     __pcinit:
   265                           	opt stack 0
   266  000D8E                     start_initialization:
   267                           	opt stack 0
   268  000D8E                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Clear objects allocated to COMRAM (5 bytes)
   272  000D8E  6A30               	clrf	(__pbssCOMRAM+4)& (0+255),c
   273  000D90  6A2F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   274  000D92  6A2E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   275  000D94  6A2D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   276  000D96  6A2C               	clrf	__pbssCOMRAM& (0+255),c
   277                           
   278                           ; Initialize objects allocated to COMRAM (4 bytes)
   279                           ; load TBLPTR registers with __pidataCOMRAM
   280  000D98  0ECE               	movlw	low __pidataCOMRAM
   281  000D9A  6EF6               	movwf	tblptrl,c
   282  000D9C  0E0E               	movlw	high __pidataCOMRAM
   283  000D9E  6EF7               	movwf	tblptrh,c
   284  000DA0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   285  000DA2  6EF8               	movwf	tblptru,c
   286  000DA4  EE00  F031         	lfsr	0,__pdataCOMRAM
   287  000DA8  EE10 F004          	lfsr	1,4
   288  000DAC                     copy_data0:
   289  000DAC  0009               	tblrd		*+
   290  000DAE  CFF5 FFEE          	movff	tablat,postinc0
   291  000DB2  50E5               	movf	postdec1,w,c
   292  000DB4  50E1               	movf	fsr1l,w,c
   293  000DB6  E1FA               	bnz	copy_data0
   294  000DB8                     end_of_initialization:
   295                           	opt stack 0
   296  000DB8                     __end_of__initialization:
   297                           	opt stack 0
   298  000DB8  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   299  000DBA  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   300  000DBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   301  000DBE  6EF8               	movwf	tblptru,c
   302  000DC0  0100               	movlb	0
   303  000DC2  EF5E  F003         	goto	_main	;jump to C main() function
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssCOMRAM
   313  00002C                     __pbssCOMRAM:
   314                           	opt stack 0
   315  00002C                     Find_Button_Press@Button_Count:
   316                           	opt stack 0
   317  00002C                     	ds	1
   318  00002D                     Find_Button_Press@Button_State:
   319                           	opt stack 0
   320  00002D                     	ds	1
   321  00002E                     Find_Button_Press@Temp_Press:
   322                           	opt stack 0
   323  00002E                     	ds	1
   324  00002F                     _Button_Press:
   325                           	opt stack 0
   326  00002F                     	ds	1
   327  000030                     _count_test:
   328                           	opt stack 0
   329  000030                     	ds	1
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	dataCOMRAM
   339  000031                     __pdataCOMRAM:
   340                           	opt stack 0
   341  000031                     _problem:
   342                           	opt stack 0
   343  000031                     	ds	2
   344  000033                     _startup:
   345                           	opt stack 0
   346  000033                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	cstackCOMRAM
   356  000001                     __pcstackCOMRAM:
   357                           	opt stack 0
   358  000001                     i2WriteTimer0@timer0:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362  000001                     	ds	2
   363  000003                     i2WriteTimer0@timer:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367  000003                     	ds	2
   368  000005                     ??_myIsr:
   369                           
   370                           ; 0 bytes @ 0x4
   371  000005                     	ds	15
   372  000014                     ??_delay_s:
   373  000014                     ?___awdiv:
   374                           	opt stack 0
   375  000014                     ?___awmod:
   376                           	opt stack 0
   377  000014                     lcd_raw_send@RS:
   378                           	opt stack 0
   379  000014                     OpenTimer0@config:
   380                           	opt stack 0
   381  000014                     WriteTimer0@timer0:
   382                           	opt stack 0
   383  000014                     ___awdiv@dividend:
   384                           	opt stack 0
   385  000014                     ___awmod@dividend:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x13
   389  000014                     	ds	1
   390  000015                     ??_lcd_raw_send:
   391  000015                     delay_s@secs:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x14
   395  000015                     	ds	1
   396  000016                     delay_s@j:
   397                           	opt stack 0
   398  000016                     WriteTimer0@timer:
   399                           	opt stack 0
   400  000016                     ___awdiv@divisor:
   401                           	opt stack 0
   402  000016                     ___awmod@divisor:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x15
   406  000016                     	ds	1
   407  000017                     lcd_raw_send@in:
   408                           	opt stack 0
   409  000017                     delay_s@i:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x16
   413  000017                     	ds	1
   414  000018                     lcd_print_ch@in:
   415                           	opt stack 0
   416  000018                     lcd_command@in:
   417                           	opt stack 0
   418  000018                     ___awdiv@counter:
   419                           	opt stack 0
   420  000018                     ___awmod@counter:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x17
   424  000018                     	ds	1
   425  000019                     ??_lcd_clear:
   426  000019                     lcd_cursor@y:
   427                           	opt stack 0
   428  000019                     ___awdiv@sign:
   429                           	opt stack 0
   430  000019                     ___awmod@sign:
   431                           	opt stack 0
   432  000019                     lcd_print@mess:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x18
   436  000019                     	ds	1
   437  00001A                     ??_lcd_start:
   438  00001A                     lcd_cursor@x:
   439                           	opt stack 0
   440  00001A                     ___awdiv@quotient:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x19
   444  00001A                     	ds	1
   445  00001B                     ??_lcd_print:
   446  00001B                     lcd_start@i:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x1A
   450  00001B                     	ds	1
   451  00001C                     lcd_display_value@hunds:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x1B
   455  00001C                     	ds	1
   456  00001D                     lcd_print@i:
   457                           	opt stack 0
   458  00001D                     lcd_display_value@tens:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x1C
   462  00001D                     	ds	1
   463  00001E                     ??_Window:
   464  00001E                     lcd_display_value@units:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x1D
   468  00001E                     	ds	1
   469  00001F                     lcd_display_value@value:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x1E
   473  00001F                     	ds	1
   474  000020                     Window@num:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x1F
   478  000020                     	ds	1
   479  000021                     _main$461:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x20
   483  000021                     	ds	2
   484  000023                     _main$462:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x22
   488  000023                     	ds	2
   489  000025                     _main$463:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x24
   493  000025                     	ds	2
   494  000027                     main@C:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x26
   498  000027                     	ds	1
   499  000028                     main@A:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x27
   503  000028                     	ds	1
   504  000029                     main@B:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x28
   508  000029                     	ds	1
   509  00002A                     main@my_mch_state:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x29
   513  00002A                     	ds	1
   514  00002B                     main@Temp_Value:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2A
   518  00002B                     	ds	1
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           postinc0	equ	0xFEE
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 102 in file "st_mch3_update_values_with_debounce_lib.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  Temp_Value      1   42[COMRAM] unsigned char 
   537 ;;  my_mch_state    1   41[COMRAM] enum E4342
   538 ;;  B               1   40[COMRAM] unsigned char 
   539 ;;  A               1   39[COMRAM] unsigned char 
   540 ;;  C               1   38[COMRAM] unsigned char 
   541 ;; Return value:  Size  Location     Type
   542 ;;		None               void
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   550 ;;      Params:         0       0       0       0       0       0       0
   551 ;;      Locals:        11       0       0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0       0       0
   553 ;;      Totals:        11       0       0       0       0       0       0
   554 ;;Total ram usage:       11 bytes
   555 ;; Hardware stack levels required when called:    6
   556 ;; This function calls:
   557 ;;		_Initial
   558 ;;		_Window
   559 ;;		_delay_s
   560 ;;		_lcd_clear
   561 ;;		_lcd_cursor
   562 ;;		_lcd_display_value
   563 ;;		_lcd_print
   564 ;;		_lcd_start
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text0
   571  0006BC                     __ptext0:
   572                           	opt stack 0
   573  0006BC                     _main:
   574                           	opt stack 25
   575                           
   576                           ;st_mch3_update_values_with_debounce_lib.c: 104: unsigned char A = 20;
   577                           
   578                           ;incstack = 0
   579  0006BC  0E14               	movlw	20
   580  0006BE  6E28               	movwf	main@A,c
   581                           
   582                           ;st_mch3_update_values_with_debounce_lib.c: 105: unsigned char B = 30;
   583  0006C0  0E1E               	movlw	30
   584  0006C2  6E29               	movwf	main@B,c
   585                           
   586                           ;st_mch3_update_values_with_debounce_lib.c: 106: unsigned char C = 40;
   587  0006C4  0E28               	movlw	40
   588  0006C6  6E27               	movwf	main@C,c
   589                           
   590                           ;st_mch3_update_values_with_debounce_lib.c: 107: unsigned char Temp_Value = 0;
   591  0006C8  0E00               	movlw	0
   592  0006CA  6E2B               	movwf	main@Temp_Value,c
   593                           
   594                           ;st_mch3_update_values_with_debounce_lib.c: 109: typedef enum {MENU_0 = 0,MENU_1,MENU_2,
      +                           MENU_3} states;
   595                           ;st_mch3_update_values_with_debounce_lib.c: 110: states my_mch_state = MENU_3;
   596  0006CC  0E03               	movlw	3
   597  0006CE  6E2A               	movwf	main@my_mch_state,c
   598                           
   599                           ;st_mch3_update_values_with_debounce_lib.c: 112: Initial();
   600  0006D0  EC14  F007         	call	_Initial	;wreg free
   601                           
   602                           ;st_mch3_update_values_with_debounce_lib.c: 113: lcd_start ();
   603  0006D4  ECA6  F006         	call	_lcd_start	;wreg free
   604                           
   605                           ;st_mch3_update_values_with_debounce_lib.c: 114: lcd_cursor ( 0, 0 ) ;
   606  0006D8  0E00               	movlw	0
   607  0006DA  6E19               	movwf	lcd_cursor@y,c
   608  0006DC  0E00               	movlw	0
   609  0006DE  EC3A  F007         	call	_lcd_cursor
   610                           
   611                           ;st_mch3_update_values_with_debounce_lib.c: 115: lcd_print ( startup ) ;
   612  0006E2  C033  F019         	movff	_startup,lcd_print@mess
   613  0006E6  C034  F01A         	movff	_startup+1,lcd_print@mess+1
   614  0006EA  EC7C  F006         	call	_lcd_print	;wreg free
   615                           
   616                           ;st_mch3_update_values_with_debounce_lib.c: 117: delay_s(2);
   617  0006EE  0E02               	movlw	2
   618  0006F0  ECE3  F006         	call	_delay_s
   619                           
   620                           ;st_mch3_update_values_with_debounce_lib.c: 119: Window(0);
   621  0006F4  0E00               	movlw	0
   622  0006F6  EC49  F006         	call	_Window
   623                           
   624                           ;st_mch3_update_values_with_debounce_lib.c: 120: lcd_cursor ( 10, 0 ) ;
   625  0006FA  0E00               	movlw	0
   626  0006FC  6E19               	movwf	lcd_cursor@y,c
   627  0006FE  0E0A               	movlw	10
   628  000700  EC3A  F007         	call	_lcd_cursor
   629                           
   630                           ;st_mch3_update_values_with_debounce_lib.c: 121: lcd_display_value(A);
   631  000704  5028               	movf	main@A,w,c
   632  000706  EC4B  F005         	call	_lcd_display_value
   633                           
   634                           ;st_mch3_update_values_with_debounce_lib.c: 122: lcd_cursor ( 10, 1 ) ;
   635  00070A  0E01               	movlw	1
   636  00070C  6E19               	movwf	lcd_cursor@y,c
   637  00070E  0E0A               	movlw	10
   638  000710  EC3A  F007         	call	_lcd_cursor
   639                           
   640                           ;st_mch3_update_values_with_debounce_lib.c: 123: lcd_display_value(B);
   641  000714  5029               	movf	main@B,w,c
   642  000716  EC4B  F005         	call	_lcd_display_value
   643  00071A                     l1517:
   644  00071A  502F               	movf	_Button_Press,w,c
   645  00071C  A4D8               	btfss	status,2,c
   646  00071E  D029               	goto	l1541
   647  000720  D7FC               	goto	l1517
   648  000722                     l132:
   649                           
   650                           ;st_mch3_update_values_with_debounce_lib.c: 135: if (Button_Press.B0){
   651  000722  A02F               	btfss	_Button_Press,0,c
   652  000724  D0D1               	goto	l1627
   653                           
   654                           ;st_mch3_update_values_with_debounce_lib.c: 136: my_mch_state = MENU_1;
   655  000726  0E01               	movlw	1
   656  000728  6E2A               	movwf	main@my_mch_state,c
   657                           
   658                           ;st_mch3_update_values_with_debounce_lib.c: 137: Window(1);
   659  00072A  0E01               	movlw	1
   660  00072C  EC49  F006         	call	_Window
   661                           
   662                           ;st_mch3_update_values_with_debounce_lib.c: 138: }
   663                           ;st_mch3_update_values_with_debounce_lib.c: 140: break;
   664  000730  D0CB               	goto	l1627
   665  000732                     l135:
   666                           
   667                           ;st_mch3_update_values_with_debounce_lib.c: 142: if (Button_Press.B0){
   668  000732  A02F               	btfss	_Button_Press,0,c
   669  000734  D0C9               	goto	l1627
   670                           
   671                           ;st_mch3_update_values_with_debounce_lib.c: 143: my_mch_state = MENU_2;
   672  000736  0E02               	movlw	2
   673  000738  6E2A               	movwf	main@my_mch_state,c
   674                           
   675                           ;st_mch3_update_values_with_debounce_lib.c: 144: Window(2);
   676  00073A  0E02               	movlw	2
   677  00073C  EC49  F006         	call	_Window
   678                           
   679                           ;st_mch3_update_values_with_debounce_lib.c: 145: }
   680                           ;st_mch3_update_values_with_debounce_lib.c: 146: break;
   681  000740  D0C3               	goto	l1627
   682  000742                     l137:
   683                           
   684                           ;st_mch3_update_values_with_debounce_lib.c: 148: if (Button_Press.B0){
   685  000742  A02F               	btfss	_Button_Press,0,c
   686  000744  D0C1               	goto	l1627
   687                           
   688                           ;st_mch3_update_values_with_debounce_lib.c: 149: my_mch_state = MENU_3;
   689  000746  0E03               	movlw	3
   690  000748  6E2A               	movwf	main@my_mch_state,c
   691                           
   692                           ;st_mch3_update_values_with_debounce_lib.c: 150: Window(3);
   693  00074A  0E03               	movlw	3
   694  00074C  EC49  F006         	call	_Window
   695                           
   696                           ;st_mch3_update_values_with_debounce_lib.c: 151: }
   697                           ;st_mch3_update_values_with_debounce_lib.c: 152: break;
   698  000750  D0BB               	goto	l1627
   699  000752                     l139:
   700                           
   701                           ;st_mch3_update_values_with_debounce_lib.c: 154: if (Button_Press.B0){
   702  000752  A02F               	btfss	_Button_Press,0,c
   703  000754  D0B9               	goto	l1627
   704                           
   705                           ;st_mch3_update_values_with_debounce_lib.c: 155: my_mch_state = MENU_0;
   706  000756  0E00               	movlw	0
   707  000758  6E2A               	movwf	main@my_mch_state,c
   708                           
   709                           ;st_mch3_update_values_with_debounce_lib.c: 156: Window(0);
   710  00075A  0E00               	movlw	0
   711  00075C  EC49  F006         	call	_Window
   712                           
   713                           ;st_mch3_update_values_with_debounce_lib.c: 157: }
   714                           ;st_mch3_update_values_with_debounce_lib.c: 158: break;
   715  000760  D0B3               	goto	l1627
   716  000762                     l141:
   717                           
   718                           ;st_mch3_update_values_with_debounce_lib.c: 160: if (Button_Press.B0){
   719  000762  A02F               	btfss	_Button_Press,0,c
   720  000764  D0B1               	goto	l1627
   721                           
   722                           ;st_mch3_update_values_with_debounce_lib.c: 161: my_mch_state = MENU_0;
   723  000766  0E00               	movlw	0
   724  000768  6E2A               	movwf	main@my_mch_state,c
   725                           
   726                           ;st_mch3_update_values_with_debounce_lib.c: 162: Window(0);
   727  00076A  0E00               	movlw	0
   728  00076C  EC49  F006         	call	_Window
   729                           
   730                           ;st_mch3_update_values_with_debounce_lib.c: 165: }
   731                           
   732                           ;st_mch3_update_values_with_debounce_lib.c: 163: }
   733                           ;st_mch3_update_values_with_debounce_lib.c: 164: break;
   734  000770  D0AB               	goto	l1627
   735  000772                     l1541:
   736  000772  502A               	movf	main@my_mch_state,w,c
   737                           
   738                           ; Switch size 1, requested type "space"
   739                           ; Number of cases is 4, Range of values is 0 to 3
   740                           ; switch strategies available:
   741                           ; Name         Instructions Cycles
   742                           ; simple_byte           13     7 (average)
   743                           ;	Chosen strategy is simple_byte
   744  000774  0A00               	xorlw	0	; case 0
   745  000776  B4D8               	btfsc	status,2,c
   746  000778  D7D4               	goto	l132
   747  00077A  0A01               	xorlw	1	; case 1
   748  00077C  B4D8               	btfsc	status,2,c
   749  00077E  D7D9               	goto	l135
   750  000780  0A03               	xorlw	3	; case 2
   751  000782  B4D8               	btfsc	status,2,c
   752  000784  D7DE               	goto	l137
   753  000786  0A01               	xorlw	1	; case 3
   754  000788  B4D8               	btfsc	status,2,c
   755  00078A  D7E3               	goto	l139
   756  00078C  D7EA               	goto	l141
   757  00078E                     l1543:
   758                           
   759                           ;st_mch3_update_values_with_debounce_lib.c: 171: lcd_cursor ( 10, 0 ) ;
   760  00078E  0E00               	movlw	0
   761  000790  6E19               	movwf	lcd_cursor@y,c
   762  000792  0E0A               	movlw	10
   763  000794  EC3A  F007         	call	_lcd_cursor
   764                           
   765                           ;st_mch3_update_values_with_debounce_lib.c: 172: lcd_display_value(A);
   766  000798  5028               	movf	main@A,w,c
   767  00079A  EC4B  F005         	call	_lcd_display_value
   768                           
   769                           ;st_mch3_update_values_with_debounce_lib.c: 173: lcd_cursor ( 10, 1 ) ;
   770  00079E  0E01               	movlw	1
   771  0007A0  6E19               	movwf	lcd_cursor@y,c
   772  0007A2  0E0A               	movlw	10
   773  0007A4  EC3A  F007         	call	_lcd_cursor
   774                           
   775                           ;st_mch3_update_values_with_debounce_lib.c: 174: lcd_display_value(B);
   776  0007A8  5029               	movf	main@B,w,c
   777  0007AA  EC4B  F005         	call	_lcd_display_value
   778                           
   779                           ;st_mch3_update_values_with_debounce_lib.c: 175: LATC = 0x01;
   780  0007AE  0E01               	movlw	1
   781  0007B0  D089               	goto	L4
   782  0007B2                     l146:
   783                           
   784                           ;st_mch3_update_values_with_debounce_lib.c: 179: if (Button_Press.B1)
   785  0007B2  B22F               	btfsc	_Button_Press,1,c
   786                           
   787                           ;st_mch3_update_values_with_debounce_lib.c: 180: A = Temp_Value;
   788  0007B4  C02B  F028         	movff	main@Temp_Value,main@A
   789                           
   790                           ;st_mch3_update_values_with_debounce_lib.c: 181: if (Button_Press.B2)
   791  0007B8  B42F               	btfsc	_Button_Press,2,c
   792                           
   793                           ;st_mch3_update_values_with_debounce_lib.c: 182: Temp_Value++;
   794  0007BA  2A2B               	incf	main@Temp_Value,f,c
   795                           
   796                           ;st_mch3_update_values_with_debounce_lib.c: 183: if (Button_Press.B3)
   797  0007BC  A62F               	btfss	_Button_Press,3,c
   798  0007BE  D010               	goto	l1561
   799                           
   800                           ;st_mch3_update_values_with_debounce_lib.c: 184: Temp_Value = (Temp_Value != 0 ? Temp_Va
      +                          lue - 1 : 0);
   801  0007C0  502B               	movf	main@Temp_Value,w,c
   802  0007C2  A4D8               	btfss	status,2,c
   803  0007C4  D005               	goto	l1557
   804  0007C6  0E00               	movlw	0
   805  0007C8  6E22               	movwf	_main$461+1,c
   806  0007CA  0E00               	movlw	0
   807  0007CC  6E21               	movwf	_main$461,c
   808  0007CE  D006               	goto	l1559
   809  0007D0                     l1557:
   810  0007D0  0EFF               	movlw	255
   811  0007D2  242B               	addwf	main@Temp_Value,w,c
   812  0007D4  6E21               	movwf	_main$461,c
   813  0007D6  6A22               	clrf	_main$461+1,c
   814  0007D8  0EFF               	movlw	255
   815  0007DA  2222               	addwfc	_main$461+1,f,c
   816  0007DC                     l1559:
   817  0007DC  C021  F02B         	movff	_main$461,main@Temp_Value
   818  0007E0                     l1561:
   819                           
   820                           ;st_mch3_update_values_with_debounce_lib.c: 186: lcd_cursor ( 10, 0 ) ;
   821  0007E0  0E00               	movlw	0
   822  0007E2  6E19               	movwf	lcd_cursor@y,c
   823  0007E4  0E0A               	movlw	10
   824  0007E6  EC3A  F007         	call	_lcd_cursor
   825                           
   826                           ;st_mch3_update_values_with_debounce_lib.c: 187: lcd_display_value(A);
   827  0007EA  5028               	movf	main@A,w,c
   828  0007EC  EC4B  F005         	call	_lcd_display_value
   829                           
   830                           ;st_mch3_update_values_with_debounce_lib.c: 188: lcd_cursor ( 10, 1 ) ;
   831  0007F0  0E01               	movlw	1
   832  0007F2  6E19               	movwf	lcd_cursor@y,c
   833  0007F4  0E0A               	movlw	10
   834  0007F6  EC3A  F007         	call	_lcd_cursor
   835                           
   836                           ;st_mch3_update_values_with_debounce_lib.c: 189: lcd_display_value(Temp_Value);
   837  0007FA  502B               	movf	main@Temp_Value,w,c
   838  0007FC  EC4B  F005         	call	_lcd_display_value
   839                           
   840                           ;st_mch3_update_values_with_debounce_lib.c: 190: LATC= 0x02;
   841  000800  0E02               	movlw	2
   842  000802  D060               	goto	L4
   843  000804                     l154:
   844                           
   845                           ;st_mch3_update_values_with_debounce_lib.c: 193: if (Button_Press.B1)
   846  000804  B22F               	btfsc	_Button_Press,1,c
   847                           
   848                           ;st_mch3_update_values_with_debounce_lib.c: 194: B = Temp_Value;
   849  000806  C02B  F029         	movff	main@Temp_Value,main@B
   850                           
   851                           ;st_mch3_update_values_with_debounce_lib.c: 195: if (Button_Press.B2)
   852  00080A  B42F               	btfsc	_Button_Press,2,c
   853                           
   854                           ;st_mch3_update_values_with_debounce_lib.c: 196: Temp_Value++;
   855  00080C  2A2B               	incf	main@Temp_Value,f,c
   856                           
   857                           ;st_mch3_update_values_with_debounce_lib.c: 197: if (Button_Press.B3)
   858  00080E  A62F               	btfss	_Button_Press,3,c
   859  000810  D010               	goto	l1585
   860                           
   861                           ;st_mch3_update_values_with_debounce_lib.c: 198: Temp_Value = (Temp_Value != 0 ? Temp_Va
      +                          lue - 1 : 0);
   862  000812  502B               	movf	main@Temp_Value,w,c
   863  000814  A4D8               	btfss	status,2,c
   864  000816  D005               	goto	l1581
   865  000818  0E00               	movlw	0
   866  00081A  6E24               	movwf	_main$462+1,c
   867  00081C  0E00               	movlw	0
   868  00081E  6E23               	movwf	_main$462,c
   869  000820  D006               	goto	l1583
   870  000822                     l1581:
   871  000822  0EFF               	movlw	255
   872  000824  242B               	addwf	main@Temp_Value,w,c
   873  000826  6E23               	movwf	_main$462,c
   874  000828  6A24               	clrf	_main$462+1,c
   875  00082A  0EFF               	movlw	255
   876  00082C  2224               	addwfc	_main$462+1,f,c
   877  00082E                     l1583:
   878  00082E  C023  F02B         	movff	_main$462,main@Temp_Value
   879  000832                     l1585:
   880                           
   881                           ;st_mch3_update_values_with_debounce_lib.c: 200: lcd_cursor ( 10, 0 ) ;
   882  000832  0E00               	movlw	0
   883  000834  6E19               	movwf	lcd_cursor@y,c
   884  000836  0E0A               	movlw	10
   885  000838  EC3A  F007         	call	_lcd_cursor
   886                           
   887                           ;st_mch3_update_values_with_debounce_lib.c: 201: lcd_display_value(B);
   888  00083C  5029               	movf	main@B,w,c
   889  00083E  EC4B  F005         	call	_lcd_display_value
   890                           
   891                           ;st_mch3_update_values_with_debounce_lib.c: 202: lcd_cursor ( 10, 1 ) ;
   892  000842  0E01               	movlw	1
   893  000844  6E19               	movwf	lcd_cursor@y,c
   894  000846  0E0A               	movlw	10
   895  000848  EC3A  F007         	call	_lcd_cursor
   896                           
   897                           ;st_mch3_update_values_with_debounce_lib.c: 203: lcd_display_value(Temp_Value);
   898  00084C  502B               	movf	main@Temp_Value,w,c
   899  00084E  EC4B  F005         	call	_lcd_display_value
   900                           
   901                           ;st_mch3_update_values_with_debounce_lib.c: 204: LATC = 0x03;
   902  000852  0E03               	movlw	3
   903  000854  D037               	goto	L4
   904  000856                     l162:
   905                           
   906                           ;st_mch3_update_values_with_debounce_lib.c: 207: if (Button_Press.B1)
   907  000856  B22F               	btfsc	_Button_Press,1,c
   908                           
   909                           ;st_mch3_update_values_with_debounce_lib.c: 208: C = Temp_Value;
   910  000858  C02B  F027         	movff	main@Temp_Value,main@C
   911                           
   912                           ;st_mch3_update_values_with_debounce_lib.c: 209: if (Button_Press.B2)
   913  00085C  B42F               	btfsc	_Button_Press,2,c
   914                           
   915                           ;st_mch3_update_values_with_debounce_lib.c: 210: Temp_Value++;
   916  00085E  2A2B               	incf	main@Temp_Value,f,c
   917                           
   918                           ;st_mch3_update_values_with_debounce_lib.c: 211: if (Button_Press.B3)
   919  000860  A62F               	btfss	_Button_Press,3,c
   920  000862  D010               	goto	l1609
   921                           
   922                           ;st_mch3_update_values_with_debounce_lib.c: 212: Temp_Value = (Temp_Value != 0 ? Temp_Va
      +                          lue - 1 : 0);
   923  000864  502B               	movf	main@Temp_Value,w,c
   924  000866  A4D8               	btfss	status,2,c
   925  000868  D005               	goto	l1605
   926  00086A  0E00               	movlw	0
   927  00086C  6E26               	movwf	_main$463+1,c
   928  00086E  0E00               	movlw	0
   929  000870  6E25               	movwf	_main$463,c
   930  000872  D006               	goto	l1607
   931  000874                     l1605:
   932  000874  0EFF               	movlw	255
   933  000876  242B               	addwf	main@Temp_Value,w,c
   934  000878  6E25               	movwf	_main$463,c
   935  00087A  6A26               	clrf	_main$463+1,c
   936  00087C  0EFF               	movlw	255
   937  00087E  2226               	addwfc	_main$463+1,f,c
   938  000880                     l1607:
   939  000880  C025  F02B         	movff	_main$463,main@Temp_Value
   940  000884                     l1609:
   941                           
   942                           ;st_mch3_update_values_with_debounce_lib.c: 214: lcd_cursor ( 10, 0 ) ;
   943  000884  0E00               	movlw	0
   944  000886  6E19               	movwf	lcd_cursor@y,c
   945  000888  0E0A               	movlw	10
   946  00088A  EC3A  F007         	call	_lcd_cursor
   947                           
   948                           ;st_mch3_update_values_with_debounce_lib.c: 215: lcd_display_value(C);
   949  00088E  5027               	movf	main@C,w,c
   950  000890  EC4B  F005         	call	_lcd_display_value
   951                           
   952                           ;st_mch3_update_values_with_debounce_lib.c: 216: lcd_cursor ( 10, 1 ) ;
   953  000894  0E01               	movlw	1
   954  000896  6E19               	movwf	lcd_cursor@y,c
   955  000898  0E0A               	movlw	10
   956  00089A  EC3A  F007         	call	_lcd_cursor
   957                           
   958                           ;st_mch3_update_values_with_debounce_lib.c: 217: lcd_display_value(Temp_Value);
   959  00089E  502B               	movf	main@Temp_Value,w,c
   960  0008A0  EC4B  F005         	call	_lcd_display_value
   961                           
   962                           ;st_mch3_update_values_with_debounce_lib.c: 218: LATC = 0x04;
   963  0008A4  0E04               	movlw	4
   964  0008A6  D00E               	goto	L4
   965  0008A8                     l1619:
   966                           
   967                           ;st_mch3_update_values_with_debounce_lib.c: 221: lcd_cursor ( 0, 0 ) ;
   968  0008A8  0E00               	movlw	0
   969  0008AA  6E19               	movwf	lcd_cursor@y,c
   970  0008AC  0E00               	movlw	0
   971  0008AE  EC3A  F007         	call	_lcd_cursor
   972                           
   973                           ;st_mch3_update_values_with_debounce_lib.c: 222: lcd_clear();
   974  0008B2  ECFD  F006         	call	_lcd_clear	;wreg free
   975                           
   976                           ;st_mch3_update_values_with_debounce_lib.c: 223: lcd_print ( problem );
   977  0008B6  C031  F019         	movff	_problem,lcd_print@mess
   978  0008BA  C032  F01A         	movff	_problem+1,lcd_print@mess+1
   979  0008BE  EC7C  F006         	call	_lcd_print	;wreg free
   980                           
   981                           ;st_mch3_update_values_with_debounce_lib.c: 224: LATC = 0x05;
   982  0008C2  0E05               	movlw	5
   983  0008C4                     L4:
   984  0008C4  6E8B               	movwf	3979,c	;volatile
   985                           
   986                           ;st_mch3_update_values_with_debounce_lib.c: 226: }
   987                           
   988                           ;st_mch3_update_values_with_debounce_lib.c: 225: break;
   989  0008C6  D00E               	goto	l1629
   990  0008C8                     l1627:
   991  0008C8  502A               	movf	main@my_mch_state,w,c
   992                           
   993                           ; Switch size 1, requested type "space"
   994                           ; Number of cases is 4, Range of values is 0 to 3
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte           13     7 (average)
   998                           ;	Chosen strategy is simple_byte
   999  0008CA  0A00               	xorlw	0	; case 0
  1000  0008CC  B4D8               	btfsc	status,2,c
  1001  0008CE  D75F               	goto	l1543
  1002  0008D0  0A01               	xorlw	1	; case 1
  1003  0008D2  B4D8               	btfsc	status,2,c
  1004  0008D4  D76E               	goto	l146
  1005  0008D6  0A03               	xorlw	3	; case 2
  1006  0008D8  B4D8               	btfsc	status,2,c
  1007  0008DA  D794               	goto	l154
  1008  0008DC  0A01               	xorlw	1	; case 3
  1009  0008DE  B4D8               	btfsc	status,2,c
  1010  0008E0  D7BA               	goto	l162
  1011  0008E2  D7E2               	goto	l1619
  1012  0008E4                     l1629:
  1013                           
  1014                           ;st_mch3_update_values_with_debounce_lib.c: 228: Button_Press.Full = 0;
  1015  0008E4  0E00               	movlw	0
  1016  0008E6  6E2F               	movwf	_Button_Press,c
  1017  0008E8  D718               	goto	l1517
  1018  0008EA                     __end_of_main:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           postdec1	equ	0xFE5
  1026                           fsr1l	equ	0xFE1
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function _lcd_start *****************
  1030 ;; Defined at:
  1031 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  i               1   26[COMRAM] unsigned char 
  1036 ;;  t               1    0        unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      unsigned char 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1046 ;;      Params:         0       0       0       0       0       0       0
  1047 ;;      Locals:         1       0       0       0       0       0       0
  1048 ;;      Temps:          1       0       0       0       0       0       0
  1049 ;;      Totals:         2       0       0       0       0       0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    5
  1053 ;; This function calls:
  1054 ;;		_lcd_clear
  1055 ;;		_lcd_command
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text1
  1062  000D4C                     __ptext1:
  1063                           	opt stack 0
  1064  000D4C                     _lcd_start:
  1065                           	opt stack 25
  1066                           
  1067                           ;lcdlib_2016.c: 191: unsigned char i, t ;
  1068                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
  1069                           
  1070                           ;incstack = 0
  1071  000D4C  5095               	movf	3989,w,c	;volatile
  1072  000D4E  0BC0               	andlw	192
  1073  000D50  6E95               	movwf	3989,c	;volatile
  1074                           
  1075                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
  1076  000D52  0EE0               	movlw	224
  1077  000D54  6E1A               	movwf	??_lcd_start& (0+255),c
  1078  000D56  0E6A               	movlw	106
  1079  000D58                     u997:
  1080  000D58  2EE8               	decfsz	wreg,f,c
  1081  000D5A  D7FE               	goto	u997
  1082  000D5C  2E1A               	decfsz	??_lcd_start& (0+255),f,c
  1083  000D5E  D7FC               	goto	u997
  1084                           
  1085                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
  1086  000D60  0E00               	movlw	0
  1087  000D62  6E1B               	movwf	lcd_start@i,c
  1088  000D64                     l1419:
  1089  000D64  0E04               	movlw	4
  1090  000D66  641B               	cpfsgt	lcd_start@i,c
  1091  000D68  D001               	goto	l1423
  1092  000D6A  D00E               	goto	l1429
  1093  000D6C                     l1423:
  1094                           
  1095                           ;lcdlib_2016.c: 204: {
  1096                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
  1097  000D6C  501B               	movf	lcd_start@i,w,c
  1098  000D6E  0D01               	mullw	1
  1099  000D70  0E01               	movlw	low _lcd_init
  1100  000D72  24F3               	addwf	prodl,w,c
  1101  000D74  6EF6               	movwf	tblptrl,c
  1102  000D76  0E06               	movlw	high _lcd_init
  1103  000D78  20F4               	addwfc	prodh,w,c
  1104  000D7A  6EF7               	movwf	tblptrh,c
  1105  000D7C                     	if	0	;There are less than 3 active tblptr bytes
  1106  000D7C                     	endif
  1107  000D7C  0008               	tblrd		*
  1108  000D7E  50F5               	movf	tablat,w,c
  1109  000D80  EC60  F007         	call	_lcd_command
  1110  000D84  2A1B               	incf	lcd_start@i,f,c
  1111  000D86  D7EE               	goto	l1419
  1112  000D88                     l1429:
  1113                           
  1114                           ;lcdlib_2016.c: 206: }
  1115                           ;lcdlib_2016.c: 207: lcd_clear () ;
  1116  000D88  ECFD  F006         	call	_lcd_clear	;wreg free
  1117  000D8C  0012               	return	
  1118  000D8E                     __end_of_lcd_start:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           prodh	equ	0xFF4
  1125                           prodl	equ	0xFF3
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1l	equ	0xFE1
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _lcd_display_value *****************
  1133 ;; Defined at:
  1134 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  value           1    wreg     unsigned char 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  value           1   30[COMRAM] unsigned char 
  1139 ;;  units           1   29[COMRAM] unsigned char 
  1140 ;;  tens            1   28[COMRAM] unsigned char 
  1141 ;;  hunds           1   27[COMRAM] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         0       0       0       0       0       0       0
  1152 ;;      Locals:         4       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0
  1154 ;;      Totals:         4       0       0       0       0       0       0
  1155 ;;Total ram usage:        4 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    4
  1158 ;; This function calls:
  1159 ;;		___awdiv
  1160 ;;		___awmod
  1161 ;;		_lcd_print_ch
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text2
  1168  000A96                     __ptext2:
  1169                           	opt stack 0
  1170  000A96                     _lcd_display_value:
  1171                           	opt stack 26
  1172                           
  1173                           ;incstack = 0
  1174                           ;lcd_display_value@value stored from wreg
  1175  000A96  6E1F               	movwf	lcd_display_value@value,c
  1176                           
  1177                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1178                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1179  000A98  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1180  000A9C  6A15               	clrf	___awmod@dividend+1,c
  1181  000A9E  0E00               	movlw	0
  1182  000AA0  6E17               	movwf	___awmod@divisor+1,c
  1183  000AA2  0E0A               	movlw	10
  1184  000AA4  6E16               	movwf	___awmod@divisor,c
  1185  000AA6  EC11  F006         	call	___awmod	;wreg free
  1186  000AAA  5014               	movf	?___awmod,w,c
  1187  000AAC  6E1E               	movwf	lcd_display_value@units,c
  1188                           
  1189                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1190  000AAE  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1191  000AB2  6A15               	clrf	___awdiv@dividend+1,c
  1192  000AB4  0E00               	movlw	0
  1193  000AB6  6E17               	movwf	___awdiv@divisor+1,c
  1194  000AB8  0E0A               	movlw	10
  1195  000ABA  6E16               	movwf	___awdiv@divisor,c
  1196  000ABC  EC90  F005         	call	___awdiv	;wreg free
  1197  000AC0  5014               	movf	?___awdiv,w,c
  1198  000AC2  6E1F               	movwf	lcd_display_value@value,c
  1199                           
  1200                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1201  000AC4  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1202  000AC8  6A15               	clrf	___awmod@dividend+1,c
  1203  000ACA  0E00               	movlw	0
  1204  000ACC  6E17               	movwf	___awmod@divisor+1,c
  1205  000ACE  0E0A               	movlw	10
  1206  000AD0  6E16               	movwf	___awmod@divisor,c
  1207  000AD2  EC11  F006         	call	___awmod	;wreg free
  1208  000AD6  5014               	movf	?___awmod,w,c
  1209  000AD8  6E1D               	movwf	lcd_display_value@tens,c
  1210                           
  1211                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1212  000ADA  C01F  F014         	movff	lcd_display_value@value,___awdiv@dividend
  1213  000ADE  6A15               	clrf	___awdiv@dividend+1,c
  1214  000AE0  0E00               	movlw	0
  1215  000AE2  6E17               	movwf	___awdiv@divisor+1,c
  1216  000AE4  0E0A               	movlw	10
  1217  000AE6  6E16               	movwf	___awdiv@divisor,c
  1218  000AE8  EC90  F005         	call	___awdiv	;wreg free
  1219  000AEC  5014               	movf	?___awdiv,w,c
  1220  000AEE  6E1F               	movwf	lcd_display_value@value,c
  1221                           
  1222                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1223  000AF0  C01F  F014         	movff	lcd_display_value@value,___awmod@dividend
  1224  000AF4  6A15               	clrf	___awmod@dividend+1,c
  1225  000AF6  0E00               	movlw	0
  1226  000AF8  6E17               	movwf	___awmod@divisor+1,c
  1227  000AFA  0E0A               	movlw	10
  1228  000AFC  6E16               	movwf	___awmod@divisor,c
  1229  000AFE  EC11  F006         	call	___awmod	;wreg free
  1230  000B02  5014               	movf	?___awmod,w,c
  1231  000B04  6E1C               	movwf	lcd_display_value@hunds,c
  1232                           
  1233                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1234  000B06  501C               	movf	lcd_display_value@hunds,w,c
  1235  000B08  0F30               	addlw	48
  1236  000B0A  EC59  F007         	call	_lcd_print_ch
  1237                           
  1238                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1239  000B0E  501D               	movf	lcd_display_value@tens,w,c
  1240  000B10  0F30               	addlw	48
  1241  000B12  EC59  F007         	call	_lcd_print_ch
  1242                           
  1243                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1244  000B16  501E               	movf	lcd_display_value@units,w,c
  1245  000B18  0F30               	addlw	48
  1246  000B1A  EC59  F007         	call	_lcd_print_ch
  1247  000B1E  0012               	return		;funcret
  1248  000B20                     __end_of_lcd_display_value:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           prodh	equ	0xFF4
  1255                           prodl	equ	0xFF3
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           status	equ	0xFD8
  1261                           
  1262 ;; *************** function ___awmod *****************
  1263 ;; Defined at:
  1264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  dividend        2   19[COMRAM] int 
  1267 ;;  divisor         2   21[COMRAM] int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  sign            1   24[COMRAM] unsigned char 
  1270 ;;  counter         1   23[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  2   19[COMRAM] int 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1280 ;;      Params:         4       0       0       0       0       0       0
  1281 ;;      Locals:         2       0       0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0
  1283 ;;      Totals:         6       0       0       0       0       0       0
  1284 ;;Total ram usage:        6 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_lcd_display_value
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text3
  1295  000C22                     __ptext3:
  1296                           	opt stack 0
  1297  000C22                     ___awmod:
  1298                           	opt stack 27
  1299                           
  1300                           ;incstack = 0
  1301  000C22  0E00               	movlw	0
  1302  000C24  6E19               	movwf	___awmod@sign,c
  1303  000C26  AE15               	btfss	___awmod@dividend+1,7,c
  1304  000C28  D006               	goto	l1385
  1305  000C2A  6C14               	negf	___awmod@dividend,c
  1306  000C2C  1E15               	comf	___awmod@dividend+1,f,c
  1307  000C2E  B0D8               	btfsc	status,0,c
  1308  000C30  2A15               	incf	___awmod@dividend+1,f,c
  1309  000C32  0E01               	movlw	1
  1310  000C34  6E19               	movwf	___awmod@sign,c
  1311  000C36                     l1385:
  1312  000C36  AE17               	btfss	___awmod@divisor+1,7,c
  1313  000C38  D004               	goto	l1389
  1314  000C3A  6C16               	negf	___awmod@divisor,c
  1315  000C3C  1E17               	comf	___awmod@divisor+1,f,c
  1316  000C3E  B0D8               	btfsc	status,0,c
  1317  000C40  2A17               	incf	___awmod@divisor+1,f,c
  1318  000C42                     l1389:
  1319  000C42  5016               	movf	___awmod@divisor,w,c
  1320  000C44  1017               	iorwf	___awmod@divisor+1,w,c
  1321  000C46  B4D8               	btfsc	status,2,c
  1322  000C48  D018               	goto	l1405
  1323  000C4A  0E01               	movlw	1
  1324  000C4C  6E18               	movwf	___awmod@counter,c
  1325  000C4E  D004               	goto	l1395
  1326  000C50                     l1393:
  1327  000C50  90D8               	bcf	status,0,c
  1328  000C52  3616               	rlcf	___awmod@divisor,f,c
  1329  000C54  3617               	rlcf	___awmod@divisor+1,f,c
  1330  000C56  2A18               	incf	___awmod@counter,f,c
  1331  000C58                     l1395:
  1332  000C58  AE17               	btfss	___awmod@divisor+1,7,c
  1333  000C5A  D7FA               	goto	l1393
  1334  000C5C                     l1397:
  1335  000C5C  5016               	movf	___awmod@divisor,w,c
  1336  000C5E  5C14               	subwf	___awmod@dividend,w,c
  1337  000C60  5017               	movf	___awmod@divisor+1,w,c
  1338  000C62  5815               	subwfb	___awmod@dividend+1,w,c
  1339  000C64  A0D8               	btfss	status,0,c
  1340  000C66  D004               	goto	l1401
  1341  000C68  5016               	movf	___awmod@divisor,w,c
  1342  000C6A  5E14               	subwf	___awmod@dividend,f,c
  1343  000C6C  5017               	movf	___awmod@divisor+1,w,c
  1344  000C6E  5A15               	subwfb	___awmod@dividend+1,f,c
  1345  000C70                     l1401:
  1346  000C70  90D8               	bcf	status,0,c
  1347  000C72  3217               	rrcf	___awmod@divisor+1,f,c
  1348  000C74  3216               	rrcf	___awmod@divisor,f,c
  1349  000C76  2E18               	decfsz	___awmod@counter,f,c
  1350  000C78  D7F1               	goto	l1397
  1351  000C7A                     l1405:
  1352  000C7A  5019               	movf	___awmod@sign,w,c
  1353  000C7C  B4D8               	btfsc	status,2,c
  1354  000C7E  D004               	goto	l1409
  1355  000C80  6C14               	negf	___awmod@dividend,c
  1356  000C82  1E15               	comf	___awmod@dividend+1,f,c
  1357  000C84  B0D8               	btfsc	status,0,c
  1358  000C86  2A15               	incf	___awmod@dividend+1,f,c
  1359  000C88                     l1409:
  1360  000C88  C014  F014         	movff	___awmod@dividend,?___awmod
  1361  000C8C  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  1362  000C90  0012               	return	
  1363  000C92                     __end_of___awmod:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           postdec1	equ	0xFE5
  1374                           fsr1l	equ	0xFE1
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function ___awdiv *****************
  1378 ;; Defined at:
  1379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  dividend        2   19[COMRAM] int 
  1382 ;;  divisor         2   21[COMRAM] int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  quotient        2   25[COMRAM] int 
  1385 ;;  sign            1   24[COMRAM] unsigned char 
  1386 ;;  counter         1   23[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  2   19[COMRAM] int 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1396 ;;      Params:         4       0       0       0       0       0       0
  1397 ;;      Locals:         4       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0
  1399 ;;      Totals:         8       0       0       0       0       0       0
  1400 ;;Total ram usage:        8 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_lcd_display_value
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text4
  1411  000B20                     __ptext4:
  1412                           	opt stack 0
  1413  000B20                     ___awdiv:
  1414                           	opt stack 27
  1415                           
  1416                           ;incstack = 0
  1417  000B20  0E00               	movlw	0
  1418  000B22  6E19               	movwf	___awdiv@sign,c
  1419  000B24  AE17               	btfss	___awdiv@divisor+1,7,c
  1420  000B26  D006               	goto	l1341
  1421  000B28  6C16               	negf	___awdiv@divisor,c
  1422  000B2A  1E17               	comf	___awdiv@divisor+1,f,c
  1423  000B2C  B0D8               	btfsc	status,0,c
  1424  000B2E  2A17               	incf	___awdiv@divisor+1,f,c
  1425  000B30  0E01               	movlw	1
  1426  000B32  6E19               	movwf	___awdiv@sign,c
  1427  000B34                     l1341:
  1428  000B34  AE15               	btfss	___awdiv@dividend+1,7,c
  1429  000B36  D006               	goto	l1347
  1430  000B38  6C14               	negf	___awdiv@dividend,c
  1431  000B3A  1E15               	comf	___awdiv@dividend+1,f,c
  1432  000B3C  B0D8               	btfsc	status,0,c
  1433  000B3E  2A15               	incf	___awdiv@dividend+1,f,c
  1434  000B40  0E01               	movlw	1
  1435  000B42  1A19               	xorwf	___awdiv@sign,f,c
  1436  000B44                     l1347:
  1437  000B44  0E00               	movlw	0
  1438  000B46  6E1B               	movwf	___awdiv@quotient+1,c
  1439  000B48  0E00               	movlw	0
  1440  000B4A  6E1A               	movwf	___awdiv@quotient,c
  1441  000B4C  5016               	movf	___awdiv@divisor,w,c
  1442  000B4E  1017               	iorwf	___awdiv@divisor+1,w,c
  1443  000B50  B4D8               	btfsc	status,2,c
  1444  000B52  D01C               	goto	l1369
  1445  000B54  0E01               	movlw	1
  1446  000B56  6E18               	movwf	___awdiv@counter,c
  1447  000B58  D004               	goto	l1355
  1448  000B5A                     l1353:
  1449  000B5A  90D8               	bcf	status,0,c
  1450  000B5C  3616               	rlcf	___awdiv@divisor,f,c
  1451  000B5E  3617               	rlcf	___awdiv@divisor+1,f,c
  1452  000B60  2A18               	incf	___awdiv@counter,f,c
  1453  000B62                     l1355:
  1454  000B62  AE17               	btfss	___awdiv@divisor+1,7,c
  1455  000B64  D7FA               	goto	l1353
  1456  000B66                     l1357:
  1457  000B66  90D8               	bcf	status,0,c
  1458  000B68  361A               	rlcf	___awdiv@quotient,f,c
  1459  000B6A  361B               	rlcf	___awdiv@quotient+1,f,c
  1460  000B6C  5016               	movf	___awdiv@divisor,w,c
  1461  000B6E  5C14               	subwf	___awdiv@dividend,w,c
  1462  000B70  5017               	movf	___awdiv@divisor+1,w,c
  1463  000B72  5815               	subwfb	___awdiv@dividend+1,w,c
  1464  000B74  A0D8               	btfss	status,0,c
  1465  000B76  D005               	goto	l1365
  1466  000B78  5016               	movf	___awdiv@divisor,w,c
  1467  000B7A  5E14               	subwf	___awdiv@dividend,f,c
  1468  000B7C  5017               	movf	___awdiv@divisor+1,w,c
  1469  000B7E  5A15               	subwfb	___awdiv@dividend+1,f,c
  1470  000B80  801A               	bsf	___awdiv@quotient,0,c
  1471  000B82                     l1365:
  1472  000B82  90D8               	bcf	status,0,c
  1473  000B84  3217               	rrcf	___awdiv@divisor+1,f,c
  1474  000B86  3216               	rrcf	___awdiv@divisor,f,c
  1475  000B88  2E18               	decfsz	___awdiv@counter,f,c
  1476  000B8A  D7ED               	goto	l1357
  1477  000B8C                     l1369:
  1478  000B8C  5019               	movf	___awdiv@sign,w,c
  1479  000B8E  B4D8               	btfsc	status,2,c
  1480  000B90  D004               	goto	l1373
  1481  000B92  6C1A               	negf	___awdiv@quotient,c
  1482  000B94  1E1B               	comf	___awdiv@quotient+1,f,c
  1483  000B96  B0D8               	btfsc	status,0,c
  1484  000B98  2A1B               	incf	___awdiv@quotient+1,f,c
  1485  000B9A                     l1373:
  1486  000B9A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  1487  000B9E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  1488  000BA2  0012               	return	
  1489  000BA4                     __end_of___awdiv:
  1490                           	opt stack 0
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           prodh	equ	0xFF4
  1496                           prodl	equ	0xFF3
  1497                           postinc0	equ	0xFEE
  1498                           wreg	equ	0xFE8
  1499                           postdec1	equ	0xFE5
  1500                           fsr1l	equ	0xFE1
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _Window *****************
  1504 ;; Defined at:
  1505 ;;		line 252 in file "st_mch3_update_values_with_debounce_lib.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  num             1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  num             1   31[COMRAM] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1519 ;;      Params:         0       0       0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0       0       0
  1521 ;;      Temps:          2       0       0       0       0       0       0
  1522 ;;      Totals:         3       0       0       0       0       0       0
  1523 ;;Total ram usage:        3 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    5
  1526 ;; This function calls:
  1527 ;;		_lcd_clear
  1528 ;;		_lcd_cursor
  1529 ;;		_lcd_print
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text5
  1536  000C92                     __ptext5:
  1537                           	opt stack 0
  1538  000C92                     _Window:
  1539                           	opt stack 25
  1540                           
  1541                           ;incstack = 0
  1542                           ;Window@num stored from wreg
  1543  000C92  6E20               	movwf	Window@num,c
  1544                           
  1545                           ;st_mch3_update_values_with_debounce_lib.c: 254: lcd_clear();
  1546  000C94  ECFD  F006         	call	_lcd_clear	;wreg free
  1547                           
  1548                           ;st_mch3_update_values_with_debounce_lib.c: 255: lcd_cursor ( 0, 0 ) ;
  1549  000C98  0E00               	movlw	0
  1550  000C9A  6E19               	movwf	lcd_cursor@y,c
  1551  000C9C  0E00               	movlw	0
  1552  000C9E  EC3A  F007         	call	_lcd_cursor
  1553                           
  1554                           ;st_mch3_update_values_with_debounce_lib.c: 256: lcd_print ( msg_ary[num*2]);
  1555  000CA2  5020               	movf	Window@num,w,c
  1556  000CA4  0D20               	mullw	32
  1557  000CA6  0E06               	movlw	low _msg_ary
  1558  000CA8  24F3               	addwf	prodl,w,c
  1559  000CAA  6E19               	movwf	lcd_print@mess,c
  1560  000CAC  0E06               	movlw	high _msg_ary
  1561  000CAE  20F4               	addwfc	prodh,w,c
  1562  000CB0  6E1A               	movwf	lcd_print@mess+1,c
  1563  000CB2  EC7C  F006         	call	_lcd_print	;wreg free
  1564                           
  1565                           ;st_mch3_update_values_with_debounce_lib.c: 257: lcd_cursor ( 0, 1 ) ;
  1566  000CB6  0E01               	movlw	1
  1567  000CB8  6E19               	movwf	lcd_cursor@y,c
  1568  000CBA  0E00               	movlw	0
  1569  000CBC  EC3A  F007         	call	_lcd_cursor
  1570                           
  1571                           ;st_mch3_update_values_with_debounce_lib.c: 258: lcd_print ( msg_ary[(num*2)+1]);
  1572  000CC0  5020               	movf	Window@num,w,c
  1573  000CC2  6E1E               	movwf	??_Window& (0+255),c
  1574  000CC4  6A1F               	clrf	(??_Window+1)& (0+255),c
  1575  000CC6  90D8               	bcf	status,0,c
  1576  000CC8  361E               	rlcf	??_Window,f,c
  1577  000CCA  361F               	rlcf	??_Window+1,f,c
  1578  000CCC  3A1E               	swapf	??_Window,f,c
  1579  000CCE  3A1F               	swapf	??_Window+1,f,c
  1580  000CD0  0EF0               	movlw	240
  1581  000CD2  161F               	andwf	??_Window+1,f,c
  1582  000CD4  501E               	movf	??_Window,w,c
  1583  000CD6  0B0F               	andlw	15
  1584  000CD8  121F               	iorwf	??_Window+1,f,c
  1585  000CDA  0EF0               	movlw	240
  1586  000CDC  161E               	andwf	??_Window,f,c
  1587  000CDE  0E10               	movlw	16
  1588  000CE0  261E               	addwf	??_Window,f,c
  1589  000CE2  0E00               	movlw	0
  1590  000CE4  221F               	addwfc	??_Window+1,f,c
  1591  000CE6  0E06               	movlw	low _msg_ary
  1592  000CE8  241E               	addwf	??_Window,w,c
  1593  000CEA  6E19               	movwf	lcd_print@mess,c
  1594  000CEC  0E06               	movlw	high _msg_ary
  1595  000CEE  201F               	addwfc	??_Window+1,w,c
  1596  000CF0  6E1A               	movwf	lcd_print@mess+1,c
  1597  000CF2  EC7C  F006         	call	_lcd_print	;wreg free
  1598  000CF6  0012               	return		;funcret
  1599  000CF8                     __end_of_Window:
  1600                           	opt stack 0
  1601                           tblptru	equ	0xFF8
  1602                           tblptrh	equ	0xFF7
  1603                           tblptrl	equ	0xFF6
  1604                           tablat	equ	0xFF5
  1605                           prodh	equ	0xFF4
  1606                           prodl	equ	0xFF3
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           postdec1	equ	0xFE5
  1610                           fsr1l	equ	0xFE1
  1611                           status	equ	0xFD8
  1612                           
  1613 ;; *************** function _lcd_print *****************
  1614 ;; Defined at:
  1615 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  mess            2   24[COMRAM] PTR const unsigned char 
  1618 ;;		 -> msg_ary(160), STR_2(12), STR_1(8), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  i               1   28[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      unsigned char 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1630 ;;      Params:         2       0       0       0       0       0       0
  1631 ;;      Locals:         1       0       0       0       0       0       0
  1632 ;;      Temps:          2       0       0       0       0       0       0
  1633 ;;      Totals:         5       0       0       0       0       0       0
  1634 ;;Total ram usage:        5 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    4
  1637 ;; This function calls:
  1638 ;;		_lcd_print_ch
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;;		_Window
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text6
  1646  000CF8                     __ptext6:
  1647                           	opt stack 0
  1648  000CF8                     _lcd_print:
  1649                           	opt stack 26
  1650                           
  1651                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
  1652                           
  1653                           ;incstack = 0
  1654  000CF8  0E00               	movlw	0
  1655  000CFA  6E1D               	movwf	lcd_print@i,c
  1656                           
  1657                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
  1658  000CFC  D013               	goto	l1301
  1659  000CFE                     l1297:
  1660                           
  1661                           ;lcdlib_2016.c: 225: {
  1662                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
  1663  000CFE  501D               	movf	lcd_print@i,w,c
  1664  000D00  0D01               	mullw	1
  1665  000D02  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1666  000D06  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1667  000D0A  50F3               	movf	prodl,w,c
  1668  000D0C  261B               	addwf	??_lcd_print,f,c
  1669  000D0E  50F4               	movf	prodh,w,c
  1670  000D10  221C               	addwfc	??_lcd_print+1,f,c
  1671  000D12  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1672  000D16  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1673  000D1A                     	if	0	;tblptru may be non-zero
  1674  000D1A                     	endif
  1675  000D1A                     	if	0	;tblptru may be non-zero
  1676  000D1A                     	endif
  1677  000D1A  0008               	tblrd		*
  1678  000D1C  50F5               	movf	tablat,w,c
  1679  000D1E  EC59  F007         	call	_lcd_print_ch
  1680                           
  1681                           ;lcdlib_2016.c: 227: i++ ;
  1682  000D22  2A1D               	incf	lcd_print@i,f,c
  1683  000D24                     l1301:
  1684  000D24  501D               	movf	lcd_print@i,w,c
  1685  000D26  0D01               	mullw	1
  1686  000D28  C019  F01B         	movff	lcd_print@mess,??_lcd_print
  1687  000D2C  C01A  F01C         	movff	lcd_print@mess+1,??_lcd_print+1
  1688  000D30  50F3               	movf	prodl,w,c
  1689  000D32  261B               	addwf	??_lcd_print,f,c
  1690  000D34  50F4               	movf	prodh,w,c
  1691  000D36  221C               	addwfc	??_lcd_print+1,f,c
  1692  000D38  C01B  FFF6         	movff	??_lcd_print,tblptrl
  1693  000D3C  C01C  FFF7         	movff	??_lcd_print+1,tblptrh
  1694  000D40                     	if	0	;tblptru may be non-zero
  1695  000D40                     	endif
  1696  000D40                     	if	0	;tblptru may be non-zero
  1697  000D40                     	endif
  1698  000D40  0008               	tblrd		*
  1699  000D42  50F5               	movf	tablat,w,c
  1700  000D44  0900               	iorlw	0
  1701  000D46  B4D8               	btfsc	status,2,c
  1702  000D48  0012               	return	
  1703  000D4A  D7D9               	goto	l1297
  1704  000D4C                     __end_of_lcd_print:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           prodh	equ	0xFF4
  1711                           prodl	equ	0xFF3
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           status	equ	0xFD8
  1717                           
  1718 ;; *************** function _lcd_print_ch *****************
  1719 ;; Defined at:
  1720 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  in              1    wreg     unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  in              1   23[COMRAM] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      unsigned char 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         1       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         1       0       0       0       0       0       0
  1738 ;;Total ram usage:        1 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    3
  1741 ;; This function calls:
  1742 ;;		_lcd_raw_send
  1743 ;; This function is called by:
  1744 ;;		_lcd_print
  1745 ;;		_lcd_display_value
  1746 ;;		_lcd_display_int_value
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text7
  1751  000EB2                     __ptext7:
  1752                           	opt stack 0
  1753  000EB2                     _lcd_print_ch:
  1754                           	opt stack 26
  1755                           
  1756                           ;incstack = 0
  1757                           ;lcd_print_ch@in stored from wreg
  1758  000EB2  6E18               	movwf	lcd_print_ch@in,c
  1759                           
  1760                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1761  000EB4  0E01               	movlw	1
  1762  000EB6  6E14               	movwf	lcd_raw_send@RS,c
  1763  000EB8  5018               	movf	lcd_print_ch@in,w,c
  1764  000EBA  EC75  F004         	call	_lcd_raw_send
  1765  000EBE  0012               	return	
  1766  000EC0                     __end_of_lcd_print_ch:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           postinc0	equ	0xFEE
  1775                           wreg	equ	0xFE8
  1776                           postdec1	equ	0xFE5
  1777                           fsr1l	equ	0xFE1
  1778                           status	equ	0xFD8
  1779                           
  1780 ;; *************** function _lcd_cursor *****************
  1781 ;; Defined at:
  1782 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  x               1    wreg     unsigned char 
  1785 ;;  y               1   24[COMRAM] unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  x               1   25[COMRAM] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1797 ;;      Params:         1       0       0       0       0       0       0
  1798 ;;      Locals:         1       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0
  1800 ;;      Totals:         2       0       0       0       0       0       0
  1801 ;;Total ram usage:        2 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    4
  1804 ;; This function calls:
  1805 ;;		_lcd_command
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;;		_Window
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text8
  1813  000E74                     __ptext8:
  1814                           	opt stack 0
  1815  000E74                     _lcd_cursor:
  1816                           	opt stack 26
  1817                           
  1818                           ;incstack = 0
  1819                           ;lcd_cursor@x stored from wreg
  1820  000E74  6E1A               	movwf	lcd_cursor@x,c
  1821                           
  1822                           ;lcdlib_2016.c: 153: if ( y==0 )
  1823  000E76  5019               	movf	lcd_cursor@y,w,c
  1824  000E78  A4D8               	btfss	status,2,c
  1825  000E7A  D002               	goto	l1289
  1826                           
  1827                           ;lcdlib_2016.c: 154: {
  1828                           ;lcdlib_2016.c: 156: y=0x80 ;
  1829  000E7C  0E80               	movlw	128
  1830  000E7E  D001               	goto	L5
  1831  000E80                     l1289:
  1832                           
  1833                           ;lcdlib_2016.c: 158: else
  1834                           ;lcdlib_2016.c: 159: {
  1835                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1836  000E80  0EC0               	movlw	192
  1837  000E82                     L5:
  1838  000E82  6E19               	movwf	lcd_cursor@y,c
  1839                           
  1840                           ;lcdlib_2016.c: 162: }
  1841                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1842  000E84  5019               	movf	lcd_cursor@y,w,c
  1843  000E86  241A               	addwf	lcd_cursor@x,w,c
  1844  000E88  EC60  F007         	call	_lcd_command
  1845  000E8C  0012               	return	
  1846  000E8E                     __end_of_lcd_cursor:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           postinc0	equ	0xFEE
  1855                           wreg	equ	0xFE8
  1856                           postdec1	equ	0xFE5
  1857                           fsr1l	equ	0xFE1
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _lcd_clear *****************
  1861 ;; Defined at:
  1862 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      unsigned char 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1876 ;;      Params:         0       0       0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0
  1878 ;;      Temps:          1       0       0       0       0       0       0
  1879 ;;      Totals:         1       0       0       0       0       0       0
  1880 ;;Total ram usage:        1 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    4
  1883 ;; This function calls:
  1884 ;;		_lcd_command
  1885 ;; This function is called by:
  1886 ;;		_lcd_start
  1887 ;;		_main
  1888 ;;		_Window
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text9
  1893  000DFA                     __ptext9:
  1894                           	opt stack 0
  1895  000DFA                     _lcd_clear:
  1896                           	opt stack 25
  1897                           
  1898                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
  1899                           
  1900                           ;incstack = 0
  1901  000DFA  0E01               	movlw	1
  1902  000DFC  EC60  F007         	call	_lcd_command
  1903                           
  1904                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
  1905  000E00  0E0D               	movlw	13
  1906  000E02  6E19               	movwf	??_lcd_clear& (0+255),c
  1907  000E04  0EC3               	movlw	195
  1908  000E06                     u1007:
  1909  000E06  2EE8               	decfsz	wreg,f,c
  1910  000E08  D7FE               	goto	u1007
  1911  000E0A  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1912  000E0C  D7FC               	goto	u1007
  1913  000E0E  F000               	nop	
  1914                           
  1915                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
  1916  000E10  0E02               	movlw	2
  1917  000E12  EC60  F007         	call	_lcd_command
  1918                           
  1919                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
  1920  000E16  0E0D               	movlw	13
  1921  000E18  6E19               	movwf	??_lcd_clear& (0+255),c
  1922  000E1A  0EC3               	movlw	195
  1923  000E1C                     u1017:
  1924  000E1C  2EE8               	decfsz	wreg,f,c
  1925  000E1E  D7FE               	goto	u1017
  1926  000E20  2E19               	decfsz	??_lcd_clear& (0+255),f,c
  1927  000E22  D7FC               	goto	u1017
  1928  000E24  F000               	nop	
  1929  000E26  0012               	return	
  1930  000E28                     __end_of_lcd_clear:
  1931                           	opt stack 0
  1932                           tblptru	equ	0xFF8
  1933                           tblptrh	equ	0xFF7
  1934                           tblptrl	equ	0xFF6
  1935                           tablat	equ	0xFF5
  1936                           prodh	equ	0xFF4
  1937                           prodl	equ	0xFF3
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1l	equ	0xFE1
  1942                           status	equ	0xFD8
  1943                           
  1944 ;; *************** function _lcd_command *****************
  1945 ;; Defined at:
  1946 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  in              1    wreg     unsigned char 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  in              1   23[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         0       0       0       0       0       0       0
  1961 ;;      Locals:         1       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0
  1963 ;;      Totals:         1       0       0       0       0       0       0
  1964 ;;Total ram usage:        1 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		_lcd_raw_send
  1969 ;; This function is called by:
  1970 ;;		_lcd_clear
  1971 ;;		_lcd_cursor
  1972 ;;		_lcd_start
  1973 ;;		_lcd_cursor_on
  1974 ;;		_lcd_cursor_off
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text10
  1979  000EC0                     __ptext10:
  1980                           	opt stack 0
  1981  000EC0                     _lcd_command:
  1982                           	opt stack 26
  1983                           
  1984                           ;incstack = 0
  1985                           ;lcd_command@in stored from wreg
  1986  000EC0  6E18               	movwf	lcd_command@in,c
  1987                           
  1988                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1989  000EC2  0E00               	movlw	0
  1990  000EC4  6E14               	movwf	lcd_raw_send@RS,c
  1991  000EC6  5018               	movf	lcd_command@in,w,c
  1992  000EC8  EC75  F004         	call	_lcd_raw_send
  1993  000ECC  0012               	return		;funcret
  1994  000ECE                     __end_of_lcd_command:
  1995                           	opt stack 0
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1l	equ	0xFE1
  2006                           status	equ	0xFD8
  2007                           
  2008 ;; *************** function _lcd_raw_send *****************
  2009 ;; Defined at:
  2010 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  in              1    wreg     unsigned char 
  2013 ;;  RS              1   19[COMRAM] unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  in              1   22[COMRAM] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;		None               void
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2025 ;;      Params:         1       0       0       0       0       0       0
  2026 ;;      Locals:         1       0       0       0       0       0       0
  2027 ;;      Temps:          2       0       0       0       0       0       0
  2028 ;;      Totals:         4       0       0       0       0       0       0
  2029 ;;Total ram usage:        4 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    2
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_lcd_print_ch
  2036 ;;		_lcd_command
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text11
  2041  0008EA                     __ptext11:
  2042                           	opt stack 0
  2043  0008EA                     _lcd_raw_send:
  2044                           	opt stack 26
  2045                           
  2046                           ;incstack = 0
  2047                           ;lcd_raw_send@in stored from wreg
  2048  0008EA  6E17               	movwf	lcd_raw_send@in,c
  2049                           
  2050                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  2051  0008EC  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2052  0008F0  3A15               	swapf	??_lcd_raw_send,f,c
  2053  0008F2  0E0F               	movlw	15
  2054  0008F4  1615               	andwf	??_lcd_raw_send,f,c
  2055  0008F6  508C               	movf	3980,w,c	;volatile
  2056  0008F8  1815               	xorwf	??_lcd_raw_send,w,c
  2057  0008FA  0BFE               	andlw	-2
  2058  0008FC  1815               	xorwf	??_lcd_raw_send,w,c
  2059  0008FE  6E8C               	movwf	3980,c	;volatile
  2060                           
  2061                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  2062  000900  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2063  000904  0E05               	movlw	5
  2064  000906  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  2065  000908                     u525:
  2066  000908  90D8               	bcf	status,0,c
  2067  00090A  3215               	rrcf	??_lcd_raw_send,f,c
  2068  00090C  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  2069  00090E  D7FC               	goto	u525
  2070  000910  4615               	rlncf	??_lcd_raw_send,f,c
  2071  000912  508C               	movf	3980,w,c	;volatile
  2072  000914  1815               	xorwf	??_lcd_raw_send,w,c
  2073  000916  0BFD               	andlw	-3
  2074  000918  1815               	xorwf	??_lcd_raw_send,w,c
  2075  00091A  6E8C               	movwf	3980,c	;volatile
  2076                           
  2077                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  2078  00091C  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2079  000920  0E06               	movlw	6
  2080  000922  6E16               	movwf	(??_lcd_raw_send+1)& (0+255),c
  2081  000924                     u535:
  2082  000924  90D8               	bcf	status,0,c
  2083  000926  3215               	rrcf	??_lcd_raw_send,f,c
  2084  000928  2E16               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  2085  00092A  D7FC               	goto	u535
  2086  00092C  4615               	rlncf	??_lcd_raw_send,f,c
  2087  00092E  4615               	rlncf	??_lcd_raw_send,f,c
  2088  000930  508C               	movf	3980,w,c	;volatile
  2089  000932  1815               	xorwf	??_lcd_raw_send,w,c
  2090  000934  0BFB               	andlw	-5
  2091  000936  1815               	xorwf	??_lcd_raw_send,w,c
  2092  000938  6E8C               	movwf	3980,c	;volatile
  2093                           
  2094                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  2095  00093A  6A15               	clrf	??_lcd_raw_send& (0+255),c
  2096  00093C  AE17               	btfss	lcd_raw_send@in,7,c
  2097  00093E  D001               	bra	u545
  2098  000940  2A15               	incf	??_lcd_raw_send& (0+255),f,c
  2099  000942                     u545:
  2100  000942  4615               	rlncf	??_lcd_raw_send,f,c
  2101  000944  4615               	rlncf	??_lcd_raw_send,f,c
  2102  000946  4615               	rlncf	??_lcd_raw_send,f,c
  2103  000948  508C               	movf	3980,w,c	;volatile
  2104  00094A  1815               	xorwf	??_lcd_raw_send,w,c
  2105  00094C  0BF7               	andlw	-9
  2106  00094E  1815               	xorwf	??_lcd_raw_send,w,c
  2107  000950  6E8C               	movwf	3980,c	;volatile
  2108                           
  2109                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  2110  000952  B014               	btfsc	lcd_raw_send@RS,0,c
  2111  000954  D002               	bra	u555
  2112  000956  988C               	bcf	3980,4,c	;volatile
  2113  000958  D001               	bra	u556
  2114  00095A                     u555:
  2115  00095A  888C               	bsf	3980,4,c	;volatile
  2116  00095C                     u556:
  2117                           
  2118                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2119  00095C  0E03               	movlw	3
  2120  00095E                     u1027:
  2121  00095E  2EE8               	decfsz	wreg,f,c
  2122  000960  D7FE               	goto	u1027
  2123                           
  2124                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  2125  000962  8A8C               	bsf	3980,5,c	;volatile
  2126                           
  2127                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2128  000964  0E03               	movlw	3
  2129  000966                     u1037:
  2130  000966  2EE8               	decfsz	wreg,f,c
  2131  000968  D7FE               	goto	u1037
  2132                           
  2133                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  2134  00096A  9A8C               	bcf	3980,5,c	;volatile
  2135                           
  2136                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2137  00096C  0E51               	movlw	81
  2138  00096E                     u1047:
  2139  00096E  2EE8               	decfsz	wreg,f,c
  2140  000970  D7FE               	goto	u1047
  2141  000972  D000               	nop2		;nop
  2142                           
  2143                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  2144  000974  B017               	btfsc	lcd_raw_send@in,0,c
  2145  000976  D002               	bra	u565
  2146  000978  908C               	bcf	3980,0,c	;volatile
  2147  00097A  D001               	bra	u566
  2148  00097C                     u565:
  2149  00097C  808C               	bsf	3980,0,c	;volatile
  2150  00097E                     u566:
  2151                           
  2152                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  2153  00097E  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2154  000982  90D8               	bcf	status,0,c
  2155  000984  3215               	rrcf	??_lcd_raw_send,f,c
  2156  000986  4615               	rlncf	??_lcd_raw_send,f,c
  2157  000988  508C               	movf	3980,w,c	;volatile
  2158  00098A  1815               	xorwf	??_lcd_raw_send,w,c
  2159  00098C  0BFD               	andlw	-3
  2160  00098E  1815               	xorwf	??_lcd_raw_send,w,c
  2161  000990  6E8C               	movwf	3980,c	;volatile
  2162                           
  2163                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  2164  000992  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2165  000996  90D8               	bcf	status,0,c
  2166  000998  3215               	rrcf	??_lcd_raw_send,f,c
  2167  00099A  90D8               	bcf	status,0,c
  2168  00099C  3215               	rrcf	??_lcd_raw_send,f,c
  2169  00099E  4615               	rlncf	??_lcd_raw_send,f,c
  2170  0009A0  4615               	rlncf	??_lcd_raw_send,f,c
  2171  0009A2  508C               	movf	3980,w,c	;volatile
  2172  0009A4  1815               	xorwf	??_lcd_raw_send,w,c
  2173  0009A6  0BFB               	andlw	-5
  2174  0009A8  1815               	xorwf	??_lcd_raw_send,w,c
  2175  0009AA  6E8C               	movwf	3980,c	;volatile
  2176                           
  2177                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  2178  0009AC  C017  F015         	movff	lcd_raw_send@in,??_lcd_raw_send
  2179  0009B0  90D8               	bcf	status,0,c
  2180  0009B2  3215               	rrcf	??_lcd_raw_send,f,c
  2181  0009B4  90D8               	bcf	status,0,c
  2182  0009B6  3215               	rrcf	??_lcd_raw_send,f,c
  2183  0009B8  90D8               	bcf	status,0,c
  2184  0009BA  3215               	rrcf	??_lcd_raw_send,f,c
  2185  0009BC  4615               	rlncf	??_lcd_raw_send,f,c
  2186  0009BE  4615               	rlncf	??_lcd_raw_send,f,c
  2187  0009C0  4615               	rlncf	??_lcd_raw_send,f,c
  2188  0009C2  508C               	movf	3980,w,c	;volatile
  2189  0009C4  1815               	xorwf	??_lcd_raw_send,w,c
  2190  0009C6  0BF7               	andlw	-9
  2191  0009C8  1815               	xorwf	??_lcd_raw_send,w,c
  2192  0009CA  6E8C               	movwf	3980,c	;volatile
  2193                           
  2194                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2195  0009CC  0E03               	movlw	3
  2196  0009CE                     u1057:
  2197  0009CE  2EE8               	decfsz	wreg,f,c
  2198  0009D0  D7FE               	goto	u1057
  2199                           
  2200                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  2201  0009D2  8A8C               	bsf	3980,5,c	;volatile
  2202                           
  2203                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  2204  0009D4  0E03               	movlw	3
  2205  0009D6                     u1067:
  2206  0009D6  2EE8               	decfsz	wreg,f,c
  2207  0009D8  D7FE               	goto	u1067
  2208                           
  2209                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  2210  0009DA  9A8C               	bcf	3980,5,c	;volatile
  2211                           
  2212                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  2213  0009DC  0E51               	movlw	81
  2214  0009DE                     u1077:
  2215  0009DE  2EE8               	decfsz	wreg,f,c
  2216  0009E0  D7FE               	goto	u1077
  2217  0009E2  D000               	nop2		;nop
  2218  0009E4  0012               	return		;funcret
  2219  0009E6                     __end_of_lcd_raw_send:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           postdec1	equ	0xFE5
  2230                           fsr1l	equ	0xFE1
  2231                           status	equ	0xFD8
  2232                           
  2233 ;; *************** function _Initial *****************
  2234 ;; Defined at:
  2235 ;;		line 235 in file "st_mch3_update_values_with_debounce_lib.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;		None               void
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2249 ;;      Params:         0       0       0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0
  2252 ;;      Totals:         0       0       0       0       0       0       0
  2253 ;;Total ram usage:        0 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    3
  2256 ;; This function calls:
  2257 ;;		_OpenTimer0
  2258 ;;		_WriteTimer0
  2259 ;;		_delay_s
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text12
  2266  000E28                     __ptext12:
  2267                           	opt stack 0
  2268  000E28                     _Initial:
  2269                           	opt stack 27
  2270                           
  2271                           ;st_mch3_update_values_with_debounce_lib.c: 237: ADCON1 = 0x0F;
  2272                           
  2273                           ;incstack = 0
  2274  000E28  0E0F               	movlw	15
  2275  000E2A  6EC1               	movwf	4033,c	;volatile
  2276                           
  2277                           ;st_mch3_update_values_with_debounce_lib.c: 238: TRISB = 0xFF;
  2278  000E2C  6893               	setf	3987,c	;volatile
  2279                           
  2280                           ;st_mch3_update_values_with_debounce_lib.c: 239: TRISC = 0x00;
  2281  000E2E  0E00               	movlw	0
  2282  000E30  6E94               	movwf	3988,c	;volatile
  2283                           
  2284                           ;st_mch3_update_values_with_debounce_lib.c: 241: LATC = 0xff;
  2285  000E32  688B               	setf	3979,c	;volatile
  2286                           
  2287                           ;st_mch3_update_values_with_debounce_lib.c: 242: delay_s(3);
  2288  000E34  0E03               	movlw	3
  2289  000E36  ECE3  F006         	call	_delay_s
  2290                           
  2291                           ;st_mch3_update_values_with_debounce_lib.c: 243: LATC = 0x00;
  2292  000E3A  0E00               	movlw	0
  2293  000E3C  6E8B               	movwf	3979,c	;volatile
  2294                           
  2295                           ;st_mch3_update_values_with_debounce_lib.c: 246: OpenTimer0( 0b11111111 & 0b10111111 & 0
      +                          b11011111 & 0b11110000);
  2296  000E3E  0E90               	movlw	144
  2297  000E40  EC2A  F007         	call	_OpenTimer0
  2298                           
  2299                           ;st_mch3_update_values_with_debounce_lib.c: 247: WriteTimer0(40960);
  2300  000E44  0EA0               	movlw	160
  2301  000E46  6E15               	movwf	WriteTimer0@timer0+1,c
  2302  000E48  0E00               	movlw	0
  2303  000E4A  6E14               	movwf	WriteTimer0@timer0,c
  2304  000E4C  EC47  F007         	call	_WriteTimer0	;wreg free
  2305                           
  2306                           ;st_mch3_update_values_with_debounce_lib.c: 248: (INTCONbits.GIE = 1);
  2307  000E50  8EF2               	bsf	intcon,7,c	;volatile
  2308  000E52  0012               	return		;funcret
  2309  000E54                     __end_of_Initial:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           postinc0	equ	0xFEE
  2319                           wreg	equ	0xFE8
  2320                           postdec1	equ	0xFE5
  2321                           fsr1l	equ	0xFE1
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _delay_s *****************
  2325 ;; Defined at:
  2326 ;;		line 262 in file "st_mch3_update_values_with_debounce_lib.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  secs            1    wreg     unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  secs            1   20[COMRAM] unsigned char 
  2331 ;;  i               1   22[COMRAM] unsigned char 
  2332 ;;  j               1   21[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;		None               void
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2342 ;;      Params:         0       0       0       0       0       0       0
  2343 ;;      Locals:         3       0       0       0       0       0       0
  2344 ;;      Temps:          1       0       0       0       0       0       0
  2345 ;;      Totals:         4       0       0       0       0       0       0
  2346 ;;Total ram usage:        4 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;;		_Initial
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text13
  2358  000DC6                     __ptext13:
  2359                           	opt stack 0
  2360  000DC6                     _delay_s:
  2361                           	opt stack 28
  2362                           
  2363                           ;incstack = 0
  2364                           ;delay_s@secs stored from wreg
  2365  000DC6  6E15               	movwf	delay_s@secs,c
  2366                           
  2367                           ;st_mch3_update_values_with_debounce_lib.c: 264: unsigned char i,j;
  2368                           ;st_mch3_update_values_with_debounce_lib.c: 265: for(j=0;j<secs;j++)
  2369  000DC8  0E00               	movlw	0
  2370  000DCA  6E16               	movwf	delay_s@j,c
  2371  000DCC  D011               	goto	l1319
  2372  000DCE                     l1307:
  2373                           
  2374                           ;st_mch3_update_values_with_debounce_lib.c: 266: {
  2375                           ;st_mch3_update_values_with_debounce_lib.c: 267: for (i=0;i<25;i++)
  2376  000DCE  0E00               	movlw	0
  2377  000DD0  6E17               	movwf	delay_s@i,c
  2378  000DD2                     l1309:
  2379  000DD2  0E18               	movlw	24
  2380  000DD4  6417               	cpfsgt	delay_s@i,c
  2381  000DD6  D001               	goto	l1313
  2382  000DD8  D00A               	goto	l1317
  2383  000DDA                     l1313:
  2384                           
  2385                           ;st_mch3_update_values_with_debounce_lib.c: 268: _delay((unsigned long)((40)*(19660800/4
      +                          000.0)));
  2386  000DDA  0E00               	movlw	0
  2387  000DDC  6E14               	movwf	??_delay_s& (0+255),c
  2388  000DDE  0E54               	movlw	84
  2389  000DE0                     u1087:
  2390  000DE0  2EE8               	decfsz	wreg,f,c
  2391  000DE2  D7FE               	goto	u1087
  2392  000DE4  2E14               	decfsz	??_delay_s& (0+255),f,c
  2393  000DE6  D7FC               	goto	u1087
  2394  000DE8  D000               	nop2	
  2395  000DEA  2A17               	incf	delay_s@i,f,c
  2396  000DEC  D7F2               	goto	l1309
  2397  000DEE                     l1317:
  2398  000DEE  2A16               	incf	delay_s@j,f,c
  2399  000DF0                     l1319:
  2400  000DF0  5015               	movf	delay_s@secs,w,c
  2401  000DF2  5C16               	subwf	delay_s@j,w,c
  2402  000DF4  B0D8               	btfsc	status,0,c
  2403  000DF6  0012               	return	
  2404  000DF8  D7EA               	goto	l1307
  2405  000DFA                     __end_of_delay_s:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           prodh	equ	0xFF4
  2412                           prodl	equ	0xFF3
  2413                           intcon	equ	0xFF2
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postdec1	equ	0xFE5
  2417                           fsr1l	equ	0xFE1
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _WriteTimer0 *****************
  2421 ;; Defined at:
  2422 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  timer0          2   19[COMRAM] unsigned int 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  timer           2   21[COMRAM] struct Timers
  2427 ;; Return value:  Size  Location     Type
  2428 ;;		None               void
  2429 ;; Registers used:
  2430 ;;		None
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2436 ;;      Params:         2       0       0       0       0       0       0
  2437 ;;      Locals:         2       0       0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0
  2439 ;;      Totals:         4       0       0       0       0       0       0
  2440 ;;Total ram usage:        4 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_Initial
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text14
  2451  000E8E                     __ptext14:
  2452                           	opt stack 0
  2453  000E8E                     _WriteTimer0:
  2454                           	opt stack 27
  2455                           
  2456                           ;incstack = 0
  2457  000E8E  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2458  000E92  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2459  000E96  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2460  000E9A  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2461  000E9E  0012               	return		;funcret
  2462  000EA0                     __end_of_WriteTimer0:
  2463                           	opt stack 0
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           prodh	equ	0xFF4
  2469                           prodl	equ	0xFF3
  2470                           intcon	equ	0xFF2
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec1	equ	0xFE5
  2474                           fsr1l	equ	0xFE1
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function _OpenTimer0 *****************
  2478 ;; Defined at:
  2479 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0open.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  config          1    wreg     unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  config          1   19[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;		None               void
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2493 ;;      Params:         0       0       0       0       0       0       0
  2494 ;;      Locals:         1       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0
  2496 ;;      Totals:         1       0       0       0       0       0       0
  2497 ;;Total ram usage:        1 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    2
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_Initial
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text15
  2508  000E54                     __ptext15:
  2509                           	opt stack 0
  2510  000E54                     _OpenTimer0:
  2511                           	opt stack 27
  2512                           
  2513                           ;incstack = 0
  2514                           ;OpenTimer0@config stored from wreg
  2515  000E54  6E14               	movwf	OpenTimer0@config,c
  2516  000E56  5014               	movf	OpenTimer0@config,w,c
  2517  000E58  0B7F               	andlw	127
  2518  000E5A  6ED5               	movwf	4053,c	;volatile
  2519  000E5C  0E00               	movlw	0
  2520  000E5E  6ED7               	movwf	4055,c	;volatile
  2521  000E60  0E00               	movlw	0
  2522  000E62  6ED6               	movwf	4054,c	;volatile
  2523  000E64  94F2               	bcf	intcon,2,c	;volatile
  2524  000E66  AE14               	btfss	OpenTimer0@config,7,c
  2525  000E68  D002               	goto	l200
  2526  000E6A  8AF2               	bsf	intcon,5,c	;volatile
  2527  000E6C  D001               	goto	l201
  2528  000E6E                     l200:
  2529  000E6E  9AF2               	bcf	intcon,5,c	;volatile
  2530  000E70                     l201:
  2531  000E70  8ED5               	bsf	4053,7,c	;volatile
  2532  000E72  0012               	return		;funcret
  2533  000E74                     __end_of_OpenTimer0:
  2534                           	opt stack 0
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           prodh	equ	0xFF4
  2540                           prodl	equ	0xFF3
  2541                           intcon	equ	0xFF2
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           fsr1l	equ	0xFE1
  2546                           status	equ	0xFD8
  2547                           
  2548 ;; *************** function _myIsr *****************
  2549 ;; Defined at:
  2550 ;;		line 67 in file "st_mch3_update_values_with_debounce_lib.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2564 ;;      Params:         0       0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0
  2566 ;;      Temps:         15       0       0       0       0       0       0
  2567 ;;      Totals:        15       0       0       0       0       0       0
  2568 ;;Total ram usage:       15 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    1
  2571 ;; This function calls:
  2572 ;;		_Find_Button_Press
  2573 ;;		i2_WriteTimer0
  2574 ;; This function is called by:
  2575 ;;		Interrupt level 2
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	intcode
  2580  000008                     __pintcode:
  2581                           	opt stack 0
  2582  000008                     _myIsr:
  2583                           	opt stack 25
  2584                           
  2585                           ;incstack = 0
  2586  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2587  00000A  CFFA F006          	movff	pclath,??_myIsr+1
  2588  00000E  CFFB F007          	movff	pclatu,??_myIsr+2
  2589  000012  EDF3  F004         	call	int_func,f	;refresh shadow registers
  2590                           pclatu	equ	0xFFB
  2591                           pclath	equ	0xFFA
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           intcon	equ	0xFF2
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1l	equ	0xFE1
  2603                           status	equ	0xFD8
  2604                           
  2605                           	psect	intcode_body
  2606  0009E6                     __pintcode_body:
  2607                           	opt stack 25
  2608  0009E6                     int_func:
  2609                           	opt stack 25
  2610  0009E6  0006               	pop		; remove dummy address from shadow register refresh
  2611  0009E8  CFE9 F008          	movff	fsr0l,??_myIsr+3
  2612  0009EC  CFEA F009          	movff	fsr0h,??_myIsr+4
  2613  0009F0  CFE1 F00A          	movff	fsr1l,??_myIsr+5
  2614  0009F4  CFE2 F00B          	movff	fsr1h,??_myIsr+6
  2615  0009F8  CFD9 F00C          	movff	fsr2l,??_myIsr+7
  2616  0009FC  CFDA F00D          	movff	fsr2h,??_myIsr+8
  2617  000A00  CFF3 F00E          	movff	prodl,??_myIsr+9
  2618  000A04  CFF4 F00F          	movff	prodh,??_myIsr+10
  2619  000A08  CFF6 F010          	movff	tblptrl,??_myIsr+11
  2620  000A0C  CFF7 F011          	movff	tblptrh,??_myIsr+12
  2621  000A10  CFF8 F012          	movff	tblptru,??_myIsr+13
  2622  000A14  CFF5 F013          	movff	tablat,??_myIsr+14
  2623                           
  2624                           ;st_mch3_update_values_with_debounce_lib.c: 71: if(INTCONbits.TMR0IE && INTCONbits.TMR0I
      +                          F) {
  2625  000A18  BAF2               	btfsc	intcon,5,c	;volatile
  2626  000A1A  A4F2               	btfss	intcon,2,c	;volatile
  2627  000A1C  D01E               	goto	i2l122
  2628                           
  2629                           ;st_mch3_update_values_with_debounce_lib.c: 73: Find_Button_Press();
  2630  000A1E  ECD2  F005         	call	_Find_Button_Press	;wreg free
  2631                           
  2632                           ;st_mch3_update_values_with_debounce_lib.c: 74: WriteTimer0(40960);
  2633  000A22  0EA0               	movlw	160
  2634  000A24  6E02               	movwf	i2WriteTimer0@timer0+1,c
  2635  000A26  0E00               	movlw	0
  2636  000A28  6E01               	movwf	i2WriteTimer0@timer0,c
  2637  000A2A  EC50  F007         	call	i2_WriteTimer0	;wreg free
  2638                           
  2639                           ;st_mch3_update_values_with_debounce_lib.c: 75: INTCONbits.TMR0IF = 0;
  2640  000A2E  94F2               	bcf	intcon,2,c	;volatile
  2641                           
  2642                           ;st_mch3_update_values_with_debounce_lib.c: 78: count_test++;
  2643  000A30  2A30               	incf	_count_test,f,c
  2644                           
  2645                           ;st_mch3_update_values_with_debounce_lib.c: 79: if(count_test == 100){
  2646  000A32  0E64               	movlw	100
  2647  000A34  1830               	xorwf	_count_test,w,c
  2648  000A36  A4D8               	btfss	status,2,c
  2649  000A38  D010               	goto	i2l122
  2650                           
  2651                           ;st_mch3_update_values_with_debounce_lib.c: 80: PORTCbits.RC7 = ~PORTCbits.RC7;
  2652  000A3A  AE82               	btfss	3970,7,c	;volatile
  2653  000A3C  D002               	goto	i2u80_40
  2654  000A3E  0E01               	movlw	1
  2655  000A40  D001               	goto	i2u80_46
  2656  000A42                     i2u80_40:
  2657  000A42  0E00               	movlw	0
  2658  000A44                     i2u80_46:
  2659  000A44  0AFF               	xorlw	255
  2660  000A46  6E05               	movwf	??_myIsr& (0+255),c
  2661  000A48  3205               	rrcf	??_myIsr,f,c
  2662  000A4A  3205               	rrcf	??_myIsr,f,c
  2663  000A4C  5082               	movf	3970,w,c	;volatile
  2664  000A4E  1805               	xorwf	??_myIsr,w,c
  2665  000A50  0B7F               	andlw	-129
  2666  000A52  1805               	xorwf	??_myIsr,w,c
  2667  000A54  6E82               	movwf	3970,c	;volatile
  2668                           
  2669                           ;st_mch3_update_values_with_debounce_lib.c: 81: count_test = 0;
  2670  000A56  0E00               	movlw	0
  2671  000A58  6E30               	movwf	_count_test,c
  2672  000A5A                     i2l122:
  2673  000A5A  C013  FFF5         	movff	??_myIsr+14,tablat
  2674  000A5E  C012  FFF8         	movff	??_myIsr+13,tblptru
  2675  000A62  C011  FFF7         	movff	??_myIsr+12,tblptrh
  2676  000A66  C010  FFF6         	movff	??_myIsr+11,tblptrl
  2677  000A6A  C00F  FFF4         	movff	??_myIsr+10,prodh
  2678  000A6E  C00E  FFF3         	movff	??_myIsr+9,prodl
  2679  000A72  C00D  FFDA         	movff	??_myIsr+8,fsr2h
  2680  000A76  C00C  FFD9         	movff	??_myIsr+7,fsr2l
  2681  000A7A  C00B  FFE2         	movff	??_myIsr+6,fsr1h
  2682  000A7E  C00A  FFE1         	movff	??_myIsr+5,fsr1l
  2683  000A82  C009  FFEA         	movff	??_myIsr+4,fsr0h
  2684  000A86  C008  FFE9         	movff	??_myIsr+3,fsr0l
  2685  000A8A  C007  FFFB         	movff	??_myIsr+2,pclatu
  2686  000A8E  C006  FFFA         	movff	??_myIsr+1,pclath
  2687  000A92  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2688  000A94  0011               	retfie		f
  2689  000A96                     __end_of_myIsr:
  2690                           	opt stack 0
  2691                           pclatu	equ	0xFFB
  2692                           pclath	equ	0xFFA
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           intcon	equ	0xFF2
  2700                           postinc0	equ	0xFEE
  2701                           fsr0h	equ	0xFEA
  2702                           fsr0l	equ	0xFE9
  2703                           wreg	equ	0xFE8
  2704                           postdec1	equ	0xFE5
  2705                           fsr1h	equ	0xFE2
  2706                           fsr1l	equ	0xFE1
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function i2_WriteTimer0 *****************
  2712 ;; Defined at:
  2713 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  timer0          2    0[COMRAM] unsigned int 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		None
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2727 ;;      Params:         2       0       0       0       0       0       0
  2728 ;;      Locals:         2       0       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0
  2730 ;;      Totals:         4       0       0       0       0       0       0
  2731 ;;Total ram usage:        4 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_myIsr
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text17
  2741  000EA0                     __ptext17:
  2742                           	opt stack 0
  2743  000EA0                     i2_WriteTimer0:
  2744                           	opt stack 25
  2745                           
  2746                           ;incstack = 0
  2747  000EA0  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  2748  000EA4  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  2749  000EA8  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  2750  000EAC  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  2751  000EB0  0012               	return		;funcret
  2752  000EB2                     __end_ofi2_WriteTimer0:
  2753                           	opt stack 0
  2754                           pclatu	equ	0xFFB
  2755                           pclath	equ	0xFFA
  2756                           tblptru	equ	0xFF8
  2757                           tblptrh	equ	0xFF7
  2758                           tblptrl	equ	0xFF6
  2759                           tablat	equ	0xFF5
  2760                           prodh	equ	0xFF4
  2761                           prodl	equ	0xFF3
  2762                           intcon	equ	0xFF2
  2763                           postinc0	equ	0xFEE
  2764                           fsr0h	equ	0xFEA
  2765                           fsr0l	equ	0xFE9
  2766                           wreg	equ	0xFE8
  2767                           postdec1	equ	0xFE5
  2768                           fsr1h	equ	0xFE2
  2769                           fsr1l	equ	0xFE1
  2770                           fsr2h	equ	0xFDA
  2771                           fsr2l	equ	0xFD9
  2772                           status	equ	0xFD8
  2773                           
  2774 ;; *************** function _Find_Button_Press *****************
  2775 ;; Defined at:
  2776 ;;		line 36 in file "../../Buttons_Debounce_State_Mch/Buttons_Debounce.X/Buttons_Debounce.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;		None               void
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         0       0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_myIsr
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text18
  2804  000BA4                     __ptext18:
  2805                           	opt stack 0
  2806  000BA4                     _Find_Button_Press:
  2807                           	opt stack 25
  2808                           
  2809                           ;Buttons_Debounce.c: 38: static states Button_State=Waiting;
  2810                           ;Buttons_Debounce.c: 39: static unsigned char Button_Count=0;
  2811                           ;Buttons_Debounce.c: 40: static Bit_Mask Temp_Press;
  2812                           ;Buttons_Debounce.c: 44: switch (Button_State){
  2813                           
  2814                           ;incstack = 0
  2815  000BA4  D030               	goto	i2l1025
  2816  000BA6                     i2l1001:
  2817                           
  2818                           ;Buttons_Debounce.c: 46: if(PORTB)
  2819  000BA6  5081               	movf	3969,w,c	;volatile
  2820  000BA8  B4D8               	btfsc	status,2,c
  2821  000BAA  0012               	return	
  2822                           
  2823                           ;Buttons_Debounce.c: 47: {
  2824                           ;Buttons_Debounce.c: 48: Button_State = Detected;
  2825  000BAC  0E01               	movlw	1
  2826  000BAE  6E2D               	movwf	Find_Button_Press@Button_State,c
  2827                           
  2828                           ;Buttons_Debounce.c: 49: Button_Count = 0;
  2829  000BB0  0E00               	movlw	0
  2830  000BB2  6E2C               	movwf	Find_Button_Press@Button_Count,c
  2831                           
  2832                           ;Buttons_Debounce.c: 51: Temp_Press.Full=PORTB;
  2833  000BB4  CF81 F02E          	movff	3969,Find_Button_Press@Temp_Press	;volatile
  2834                           
  2835                           ;Buttons_Debounce.c: 52: }
  2836                           ;Buttons_Debounce.c: 53: break;
  2837  000BB8  0012               	return	
  2838  000BBA                     i2l1007:
  2839                           
  2840                           ;Buttons_Debounce.c: 55: if (Temp_Press.Full == PORTB)
  2841  000BBA  5081               	movf	3969,w,c	;volatile
  2842  000BBC  182E               	xorwf	Find_Button_Press@Temp_Press,w,c
  2843  000BBE  A4D8               	btfss	status,2,c
  2844  000BC0  D007               	goto	i2l1015
  2845                           
  2846                           ;Buttons_Debounce.c: 56: {
  2847                           ;Buttons_Debounce.c: 57: ++Button_Count;
  2848  000BC2  2A2C               	incf	Find_Button_Press@Button_Count,f,c
  2849                           
  2850                           ;Buttons_Debounce.c: 58: if (Button_Count > 10)
  2851  000BC4  0E0A               	movlw	10
  2852  000BC6  642C               	cpfsgt	Find_Button_Press@Button_Count,c
  2853  000BC8  0012               	return	
  2854                           
  2855                           ;Buttons_Debounce.c: 59: {
  2856                           ;Buttons_Debounce.c: 60: Button_State = WaitForRelease;
  2857  000BCA  0E02               	movlw	2
  2858  000BCC  6E2D               	movwf	Find_Button_Press@Button_State,c
  2859                           
  2860                           ;Buttons_Debounce.c: 61: }
  2861                           ;Buttons_Debounce.c: 62: }
  2862  000BCE  0012               	return	
  2863  000BD0                     i2l1015:
  2864                           
  2865                           ;Buttons_Debounce.c: 63: else
  2866                           ;Buttons_Debounce.c: 64: {
  2867                           ;Buttons_Debounce.c: 65: Button_State = Waiting;
  2868  000BD0  0E00               	movlw	0
  2869  000BD2  6E2D               	movwf	Find_Button_Press@Button_State,c
  2870                           
  2871                           ;Buttons_Debounce.c: 66: }
  2872                           ;Buttons_Debounce.c: 67: break;
  2873  000BD4  0012               	return	
  2874  000BD6                     i2l1017:
  2875                           
  2876                           ;Buttons_Debounce.c: 69: if (!PORTB)
  2877  000BD6  5081               	movf	3969,w,c	;volatile
  2878  000BD8  A4D8               	btfss	status,2,c
  2879  000BDA  0012               	return	
  2880                           
  2881                           ;Buttons_Debounce.c: 70: {
  2882                           ;Buttons_Debounce.c: 71: Button_State = Update;
  2883  000BDC  0E03               	movlw	3
  2884  000BDE  6E2D               	movwf	Find_Button_Press@Button_State,c
  2885                           
  2886                           ;Buttons_Debounce.c: 72: }
  2887                           ;Buttons_Debounce.c: 73: break;
  2888  000BE0  0012               	return	
  2889  000BE2                     i2l23:
  2890                           
  2891                           ;Buttons_Debounce.c: 75: {
  2892                           ;Buttons_Debounce.c: 76: Button_Press = Temp_Press;
  2893  000BE2  C02E  F02F         	movff	Find_Button_Press@Temp_Press,_Button_Press
  2894                           
  2895                           ;Buttons_Debounce.c: 77: Button_State = Waiting;
  2896  000BE6  0E00               	movlw	0
  2897  000BE8  6E2D               	movwf	Find_Button_Press@Button_State,c
  2898                           
  2899                           ;Buttons_Debounce.c: 78: Button_Count = 0;
  2900  000BEA  0E00               	movlw	0
  2901  000BEC  6E2C               	movwf	Find_Button_Press@Button_Count,c
  2902                           
  2903                           ;Buttons_Debounce.c: 79: Temp_Press.Full=0;
  2904  000BEE  0E00               	movlw	0
  2905  000BF0  6E2E               	movwf	Find_Button_Press@Temp_Press,c
  2906                           
  2907                           ;Buttons_Debounce.c: 80: }
  2908                           ;Buttons_Debounce.c: 81: break;
  2909  000BF2  0012               	return	
  2910  000BF4                     i2l1023:
  2911                           
  2912                           ;Buttons_Debounce.c: 83: {
  2913                           ;Buttons_Debounce.c: 84: Button_State = Waiting;
  2914  000BF4  0E00               	movlw	0
  2915  000BF6  6E2D               	movwf	Find_Button_Press@Button_State,c
  2916                           
  2917                           ;Buttons_Debounce.c: 85: Button_Count = 0;
  2918  000BF8  0E00               	movlw	0
  2919  000BFA  6E2C               	movwf	Find_Button_Press@Button_Count,c
  2920                           
  2921                           ;Buttons_Debounce.c: 86: Temp_Press.Full=0;
  2922  000BFC  0E00               	movlw	0
  2923  000BFE  6E2E               	movwf	Find_Button_Press@Temp_Press,c
  2924                           
  2925                           ;Buttons_Debounce.c: 87: Button_Press.Full=0;
  2926  000C00  0E00               	movlw	0
  2927  000C02  6E2F               	movwf	_Button_Press,c
  2928                           
  2929                           ;Buttons_Debounce.c: 88: }
  2930                           ;Buttons_Debounce.c: 89: }
  2931  000C04  0012               	return	
  2932  000C06                     i2l1025:
  2933  000C06  502D               	movf	Find_Button_Press@Button_State,w,c
  2934                           
  2935                           ; Switch size 1, requested type "space"
  2936                           ; Number of cases is 4, Range of values is 0 to 3
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte           13     7 (average)
  2940                           ;	Chosen strategy is simple_byte
  2941  000C08  0A00               	xorlw	0	; case 0
  2942  000C0A  B4D8               	btfsc	status,2,c
  2943  000C0C  D7CC               	goto	i2l1001
  2944  000C0E  0A01               	xorlw	1	; case 1
  2945  000C10  B4D8               	btfsc	status,2,c
  2946  000C12  D7D3               	goto	i2l1007
  2947  000C14  0A03               	xorlw	3	; case 2
  2948  000C16  B4D8               	btfsc	status,2,c
  2949  000C18  D7DE               	goto	i2l1017
  2950  000C1A  0A01               	xorlw	1	; case 3
  2951  000C1C  B4D8               	btfsc	status,2,c
  2952  000C1E  D7E1               	goto	i2l23
  2953  000C20  D7E9               	goto	i2l1023
  2954  000C22                     __end_of_Find_Button_Press:
  2955                           	opt stack 0
  2956                           pclatu	equ	0xFFB
  2957                           pclath	equ	0xFFA
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           prodh	equ	0xFF4
  2963                           prodl	equ	0xFF3
  2964                           intcon	equ	0xFF2
  2965                           postinc0	equ	0xFEE
  2966                           fsr0h	equ	0xFEA
  2967                           fsr0l	equ	0xFE9
  2968                           wreg	equ	0xFE8
  2969                           postdec1	equ	0xFE5
  2970                           fsr1h	equ	0xFE2
  2971                           fsr1l	equ	0xFE1
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           pclatu	equ	0xFFB
  2976                           pclath	equ	0xFFA
  2977                           tblptru	equ	0xFF8
  2978                           tblptrh	equ	0xFF7
  2979                           tblptrl	equ	0xFF6
  2980                           tablat	equ	0xFF5
  2981                           prodh	equ	0xFF4
  2982                           prodl	equ	0xFF3
  2983                           intcon	equ	0xFF2
  2984                           postinc0	equ	0xFEE
  2985                           fsr0h	equ	0xFEA
  2986                           fsr0l	equ	0xFE9
  2987                           wreg	equ	0xFE8
  2988                           postdec1	equ	0xFE5
  2989                           fsr1h	equ	0xFE2
  2990                           fsr1l	equ	0xFE1
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995                           	psect	rparam
  2996  0000                     pclatu	equ	0xFFB
  2997                           pclath	equ	0xFFA
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           prodh	equ	0xFF4
  3003                           prodl	equ	0xFF3
  3004                           intcon	equ	0xFF2
  3005                           postinc0	equ	0xFEE
  3006                           fsr0h	equ	0xFEA
  3007                           fsr0l	equ	0xFE9
  3008                           wreg	equ	0xFE8
  3009                           postdec1	equ	0xFE5
  3010                           fsr1h	equ	0xFE2
  3011                           fsr1l	equ	0xFE1
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016                           	psect	temp
  3017  000035                     btemp:
  3018                           	opt stack 0
  3019  000035                     	ds	1
  3020  0000                     int$flags	set	btemp
  3021                           pclatu	equ	0xFFB
  3022                           pclath	equ	0xFFA
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           prodh	equ	0xFF4
  3028                           prodl	equ	0xFF3
  3029                           intcon	equ	0xFF2
  3030                           postinc0	equ	0xFEE
  3031                           fsr0h	equ	0xFEA
  3032                           fsr0l	equ	0xFE9
  3033                           wreg	equ	0xFE8
  3034                           postdec1	equ	0xFE5
  3035                           fsr1h	equ	0xFE2
  3036                           fsr1l	equ	0xFE1
  3037                           fsr2h	equ	0xFDA
  3038                           fsr2l	equ	0xFD9
  3039                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    165
    Data        4
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     43      52
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    startup	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), 

    problem	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 160
		 -> msg_ary(CODE[160]), STR_2(CODE[12]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Window
    _lcd_start->_lcd_clear
    _lcd_display_value->___awdiv
    _Window->_lcd_print
    _lcd_print->_lcd_print_ch
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_clear->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_WriteTimer0
    _Initial->_delay_s

Critical Paths under _myIsr in COMRAM

    _myIsr->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    9025
                                             32 COMRAM    11    11      0
                            _Initial
                             _Window
                            _delay_s
                          _lcd_clear
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     812
                                             25 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1909
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Window                                               3     3      0    2686
                                             29 COMRAM     3     3      0
                          _lcd_clear
                         _lcd_cursor
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     766
                                             24 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1    1504
                                             24 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     372
                                             24 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     372
                                             23 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     350
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     331
                         _OpenTimer0
                        _WriteTimer0
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              4     4      0      92
                                             19 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     195
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                               15    15      0      93
                                              4 COMRAM    15    15      0
                  _Find_Button_Press
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (6) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _Find_Button_Press                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _OpenTimer0
     _WriteTimer0
     _delay_s
   _Window
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_cursor
       _lcd_command
         _lcd_raw_send
     _lcd_print
       _lcd_print_ch
         _lcd_raw_send
   _delay_s
   _lcd_clear
     _lcd_command
       _lcd_raw_send
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _myIsr (ROOT)
   _Find_Button_Press
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2B      34       1       41.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      15        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 16 15:44:09 2017

                ?_lcd_raw_send 0014                   ___awdiv@sign 0019                    __CFG_BORV$3 000000  
                ?_lcd_print_ch 0001                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                    __CFG_OSC$HS 000000  
                          l200 0E6E                            l201 0E70                            l132 0722  
                          l141 0762                            l135 0732                            l137 0742  
                          l162 0856                            l154 0804                            l146 07B2  
                          l139 0752                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
                          u525 0908                            u535 0924                            u545 0942  
                          u555 095A                            u556 095C                            u565 097C  
                          u566 097E                            u997 0D58           __size_of_WriteTimer0 0012  
                 ___awmod@sign 0019                            prod 000FF3                            wreg 000FE8  
                  lcd_cursor@x 001A                    lcd_cursor@y 0019                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l1301 0D24                           l1313 0DDA  
                         l1401 0C70                           l1307 0DCE                           l1317 0DEE  
                         l1309 0DD2                           l1341 0B34                           l1405 0C7A  
                         l1319 0DF0                           l1423 0D6C                           l1353 0B5A  
                         l1409 0C88                           l1355 0B62                           l1347 0B44  
                         l1419 0D64                           l1373 0B9A                           l1365 0B82  
                         l1357 0B66                           l1429 0D88                           l1605 0874  
                         l1541 0772                           l1517 071A                           l1607 0880  
                         l1543 078E                           l1289 0E80                           l1297 0CFE  
                         l1369 0B8C                           l1393 0C50                           l1385 0C36  
                         l1609 0884                           l1561 07E0                           l1395 0C58  
                         l1619 08A8                           l1627 08C8                           l1397 0C5C  
                         l1389 0C42                           l1581 0822                           l1557 07D0  
                         l1629 08E4                           l1583 082E                           l1559 07DC  
                         l1585 0832                           STR_1 06B2                           STR_2 06A6  
                         u1007 0E06                           u1017 0E1C                           u1027 095E  
                         u1037 0966                           u1047 096E                           u1057 09CE  
                         u1067 09D6                           u1077 09DE                           u1087 0DE0  
                         _LATC 000F8B                           i2l23 0BE2                           _main 06BC  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         btemp 0035         __size_ofi2_WriteTimer0 0012                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0016  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                 ??_lcd_raw_send 0015  
                 ___param_bank 000010                __end_of_Initial 0E54                 ??_lcd_print_ch 0018  
                lcd_command@in 0018                          ?_main 0001                __end_of___awdiv 0BA4  
              __end_of___awmod 0C92                          _T0CON 000FD5                ___awdiv@divisor 0016  
                        i2l122 0A5A                ___awdiv@counter 0018                          _TMR0H 000FD7  
                        _TMR0L 000FD6                          _PORTB 000F81                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                  __CFG_PWRT$OFF 000000  
              __end_of_delay_s 0DFA                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000                          _myIsr 0008  
                        main@A 0028                          main@B 0029                          main@C 0027  
              __end_of_msg_ary 06A6                          tablat 000FF5                          status 000FD8  
              __initialization 0D8E                   __end_of_main 08EA                         ??_main 0021  
                i2_WriteTimer0 0EA0                  __activetblptr 000002                 main@Temp_Value 002B  
                       _ADCON1 000FC1                         ?_myIsr 0001               ___awdiv@dividend 0014  
                       i2l1001 0BA6                         i2l1023 0BF4                         i2l1015 0BD0  
                       i2l1007 0BBA                         i2l1017 0BD6                         i2l1025 0C06  
                   _OpenTimer0 0E54                      ??_Initial 0018                 __CFG_XINST$OFF 000000  
                lcd_print@mess 0019               __end_of_lcd_init 0606           __size_of_lcd_command 000E  
                       _Window 0C92                      ??___awdiv 0018                 __CFG_STVREN$ON 000000  
                    ??___awmod 0018               OpenTimer0@config 0014               ___awdiv@quotient 001A  
              ___awmod@divisor 0016                      ??_delay_s 0014                 ?i2_WriteTimer0 0001  
              ___awmod@counter 0018                   __pdataCOMRAM 0031                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __end_of_lcd_raw_send 09E6           __end_of_lcd_print_ch 0EC0                     __accesstop 0080  
      __end_of__initialization 0DB8                __CFG_PBADEN$OFF 000000                  ___rparam_used 000001  
               __pcstackCOMRAM 0001                  __end_of_myIsr 0A96             __size_of_lcd_clear 002E  
           __size_of_lcd_print 0054             __size_of_lcd_start 0042                        ??_myIsr 0005  
                  ?_OpenTimer0 0001                 lcd_raw_send@RS 0014                 lcd_raw_send@in 0017  
                      ?_Window 0001          lcd_display_value@tens 001D                ??i2_WriteTimer0 0003  
             WriteTimer0@timer 0016                  ??_WriteTimer0 0016                     _lcd_cursor 0E74  
                      i2u80_40 0A42                        i2u80_46 0A44            i2WriteTimer0@timer0 0001  
                      _Initial 0E28                     _count_test 0030                        __Hparam 0000  
                      __Lparam 0000              __end_of_lcd_clear 0E28    Find_Button_Press@Temp_Press 002E  
              __size_of_Window 0066              __end_of_lcd_print 0D4C              __end_of_lcd_start 0D8E  
               lcd_print_ch@in 0018                        ___awdiv 0B20                        ___awmod 0C22  
                 __psmallconst 0600                        __pcinit 0D8E                        _delay_s 0DC6  
                      __ramtop 0600            __size_of_OpenTimer0 0020                        __ptext0 06BC  
                      __ptext1 0D4C                        __ptext2 0A96                        __ptext3 0C22  
                      __ptext4 0B20                        __ptext5 0C92                        __ptext6 0CF8  
                      __ptext7 0EB2                        __ptext8 0E74                        __ptext9 0DFA  
                    _T0CONbits 000FD5          __size_of_lcd_raw_send 00FC               ___awmod@dividend 0014  
                      _msg_ary 0606            __end_of_WriteTimer0 0EA0          __size_of_lcd_print_ch 000E  
                      _problem 0031                        _startup 0033                 __pintcode_body 09E6  
         end_of_initialization 0DB8                  __Lmediumconst 0000                        int_func 09E6  
            _Find_Button_Press 0BA4             ?_Find_Button_Press 0001                        postdec1 000FE5  
                      postinc0 000FEE                   _lcd_raw_send 08EA            ??_Find_Button_Press 0001  
                 _lcd_print_ch 0EB2                      _PORTCbits 000F82                    ?_lcd_cursor 0019  
    __end_of_Find_Button_Press 0C22                  ??_lcd_command 0018                     lcd_print@i 001D  
                   lcd_start@i 001B              _lcd_display_value 0A96                 __end_of_Window 0CF8  
           ?_lcd_display_value 0001                  __pidataCOMRAM 0ECE                    _WriteTimer0 0E8E  
          ??_lcd_display_value 001C            start_initialization 0D8E                   _Button_Press 002F  
                 ??_OpenTimer0 0014      __end_of_lcd_display_value 0B20                       ??_Window 001E  
          __size_of_lcd_cursor 001A            __end_of_lcd_command 0ECE               __CFG_LPT1OSC$OFF 000000  
           __end_of_OpenTimer0 0E74                    __pbssCOMRAM 002C                      Window@num 0020  
   __size_of_Find_Button_Press 007E                       ?_Initial 0001              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008                       ?___awdiv 0014                       ?___awmod 0014  
                    _lcd_clear 0DFA                       ?_delay_s 0001          __end_ofi2_WriteTimer0 0EB2  
                    _lcd_print 0CF8         lcd_display_value@hunds 001C                      _lcd_start 0D4C  
       lcd_display_value@value 001F         lcd_display_value@units 001E                    __smallconst 0600  
            WriteTimer0@timer0 0014             i2WriteTimer0@timer 0003                 __size_of_myIsr 0A8E  
                     _LATDbits 000F8C                    _lcd_command 0EC0     __size_of_lcd_display_value 008A  
             main@my_mch_state 002A               __CFG_WDTPS$32768 000000                     ?_lcd_clear 0001  
                   ?_lcd_print 0019                     ?_lcd_start 0001                   ??_lcd_cursor 001A  
                    copy_data0 0DAC                       __Hrparam 0000               __size_of_Initial 002C  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000             __end_of_lcd_cursor 0E8E  
             __size_of___awdiv 0084               __size_of___awmod 0070                   ?_WriteTimer0 0014  
             __size_of_delay_s 0034                       _main$461 0021                       _main$462 0023  
                     _main$463 0025                       __ptext10 0EC0                       __ptext11 08EA  
                     __ptext12 0E28                       __ptext13 0DC6                       __ptext14 0E8E  
                     __ptext15 0E54                       __ptext17 0EA0                       __ptext18 0BA4  
                     _lcd_init 0601                  __size_of_main 022E                       delay_s@i 0017  
                     delay_s@j 0016                       int$flags 0035                    ??_lcd_clear 0019  
                  delay_s@secs 0015                    ??_lcd_print 001B                    ??_lcd_start 001A  
                   _INTCONbits 000FF2                       intlevel2 0000  Find_Button_Press@Button_Count 002C  
Find_Button_Press@Button_State 002D                   ?_lcd_command 0001  
